"use strict";(self.webpackChunkthe_open_source_with_remi=self.webpackChunkthe_open_source_with_remi||[]).push([[611,364],{6260:function(e,t,a){a.r(t),a.d(t,{Highlight:function(){return d},assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return r},metadata:function(){return c},toc:function(){return u}});var n=a(3117),s=(a(7294),a(3905)),i=a(4996),o=a(6395);const r={id:"backstage5675",title:"Backstage - Techdocs End-to-End testing",sidebar_label:"12. Backstage - Techdocs End-to-End testing"},l=void 0,c={unversionedId:"contributions/backstage5675",id:"contributions/backstage5675",title:"Backstage - Techdocs End-to-End testing",description:"Typescript",source:"@site/docs/contributions/backstage#5675.md",sourceDirName:"contributions",slug:"/contributions/backstage5675",permalink:"/docs/contributions/backstage5675",draft:!1,editUrl:"https://github.com/ayshiff/my-open-source-journey/docs/contributions/backstage#5675.md",tags:[],version:"current",frontMatter:{id:"backstage5675",title:"Backstage - Techdocs End-to-End testing",sidebar_label:"12. Backstage - Techdocs End-to-End testing"},sidebar:"docs",previous:{title:"11. driftctl - Support for Terraform Cloud",permalink:"/docs/contributions/driftctl458"},next:{title:"13. Google - Flutter contributions",permalink:"/docs/contributions/flutter"}},p={},d=e=>{let{children:t,color:a}=e;return(0,s.kt)("span",{style:{backgroundColor:a,borderRadius:"2px",color:"#fff",padding:"0.2rem",fontWeight:600}},t)},u=[{value:"Introduction",id:"introduction",level:2},{value:"Project",id:"project",level:3},{value:"Context",id:"context",level:3},{value:"Current behavior",id:"current-behavior",level:3},{value:"Implement the solution",id:"implement-the-solution",level:2},{value:"Define custom commands",id:"define-custom-commands",level:3},{value:"Configure the viewport",id:"configure-the-viewport",level:3},{value:"Add our first tests",id:"add-our-first-tests",level:3},{value:"Final result",id:"final-result",level:2},{value:"Takeaway",id:"takeaway",level:2},{value:"Problems encountered",id:"problems-encountered",level:3},{value:"What did I learn ?",id:"what-did-i-learn-",level:3}],h={Highlight:d,toc:u};function m(e){let{components:t,...a}=e;return(0,s.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("div",{className:"pr_infos"},(0,s.kt)("div",{className:"marginBottom"},(0,s.kt)("div",null,(0,s.kt)(o.Open,{date:"14 May 2021",mdxType:"Open"})),(0,s.kt)("span",{className:"badge badge--secondary marginRight"},"Typescript"),(0,s.kt)("span",{className:"badge badge--secondary marginRight"},"Cypress"),(0,s.kt)("span",{className:"badge badge--secondary marginRight"},"e2e testing"))),(0,s.kt)("admonition",{title:"Contribution link",type:"info"},(0,s.kt)("p",{parentName:"admonition"},(0,s.kt)("a",{parentName:"p",href:"https://github.com/backstage/backstage/pull/5675"},"https://github.com/backstage/backstage/pull/5675"))),(0,s.kt)("admonition",{title:"Contribution Type",type:"tip"},(0,s.kt)("p",{parentName:"admonition"},"This contribution is a new ",(0,s.kt)("strong",{parentName:"p"},"feature"),".")),(0,s.kt)("h2",{id:"introduction"},"Introduction"),(0,s.kt)("div",{className:"image-wrapper"},(0,s.kt)(o.ImageWrapper,{alt:"Contribution presentation",src:(0,i.Z)("img/backstage5675/cover.jpg"),mdxType:"ImageWrapper"}),(0,s.kt)("em",null,"Backstage + TechDocs")),(0,s.kt)("h3",{id:"project"},"Project"),(0,s.kt)("p",null,"You can find the ",(0,s.kt)("a",{href:"/docs/projects/backstage"},(0,s.kt)(d,{color:"#203666",mdxType:"Highlight"},"Backstage project presentation here")),"."),(0,s.kt)("h3",{id:"context"},"Context"),(0,s.kt)("p",null,"In this contribution we will talk about a specific part of Backstage: ",(0,s.kt)("strong",{parentName:"p"},"TechDocs"),".   "),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"TechDocs")," is a docs-like-code plugin that lets you write technical documentation next to your code.",(0,s.kt)("br",{parentName:"p"}),"\n","The concept is pretty simple, you write your docs in Markdown files and TechDocs creates a reader-friendly experience for you."),(0,s.kt)("p",null,"TechDocs consists of a backend plugin (",(0,s.kt)("strong",{parentName:"p"},"generate"),", ",(0,s.kt)("strong",{parentName:"p"},"prepare")," and ",(0,s.kt)("strong",{parentName:"p"},"publish")," the documentation) and a frontend plugin (renders the documentation to the final user).",(0,s.kt)("br",{parentName:"p"}),"\n","We will focus here on the frontend part as this the most relevant to us in this context.\nWe'll just admit that the backend plugin returns our documentation as HTML/CSS files."),(0,s.kt)("p",null,"The component of the frontend TechDocs plugin that we will be in charge of testing is called the ",(0,s.kt)("strong",{parentName:"p"},"TechDocs Reader"),"."),(0,s.kt)("p",null,"The ",(0,s.kt)("strong",{parentName:"p"},"TechDocs Reader")," will be in charge of getting the HTML file, running transformers on it and then renders it into a shadow DOM root. We will make sure that it does its job properly."),(0,s.kt)("p",null,"Here is some screenshots of what the frontend plugin looks like inside Backstage."),(0,s.kt)("br",null),(0,s.kt)("div",{className:"image-wrapper"},(0,s.kt)(o.ImageWrapper,{alt:"TechDocs entities",width:"100%",src:(0,i.Z)("img/backstage5675/entities.jpg"),mdxType:"ImageWrapper"}),(0,s.kt)("em",null,"TechDocs Dashboard containing the different documentation entities")),(0,s.kt)("br",null),(0,s.kt)("div",{className:"image-wrapper"},(0,s.kt)(o.ImageWrapper,{alt:"TechDocs entitiy",width:"100%",src:(0,i.Z)("img/backstage5675/entity.jpg"),mdxType:"ImageWrapper"}),(0,s.kt)("em",null,"TechDocs documentation entity")),(0,s.kt)("h3",{id:"current-behavior"},"Current behavior"),(0,s.kt)("p",null,"Some functionality of TechDocs relies on interactions between the BackStage app and the shadow root that contains the TechDocs site."),(0,s.kt)("div",{className:"image-wrapper"},(0,s.kt)(o.ImageWrapper,{alt:"Contexts",width:"450px",src:(0,i.Z)("img/backstage5675/contexts.png"),mdxType:"ImageWrapper"})),(0,s.kt)("p",null,"These interactions should be tested to ensure that the TechDocs features are working properly and avoid regressions."),(0,s.kt)("p",null,"Here is an example of some e2e tests that we will implement:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Navigating to a TechDocs site from a ",(0,s.kt)("strong",{parentName:"li"},"given URL")),(0,s.kt)("li",{parentName:"ul"},"Navigating to a TechDocs site via the ",(0,s.kt)("strong",{parentName:"li"},"primary navigation bar")),(0,s.kt)("li",{parentName:"ul"},"Navigating to a TechDocs site fragment via the ",(0,s.kt)("strong",{parentName:"li"},"table of contents"),", and so on...")),(0,s.kt)("admonition",{title:"Issue link",type:"note"},(0,s.kt)("p",{parentName:"admonition"},(0,s.kt)("a",{parentName:"p",href:"https://github.com/backstage/backstage/issues/5588"},"https://github.com/backstage/backstage/issues/5588"))),(0,s.kt)("h2",{id:"implement-the-solution"},"Implement the solution"),(0,s.kt)("admonition",{title:"changes",type:"warning"},(0,s.kt)("p",{parentName:"admonition"},"This PR being still Open, some parts are likely to change.",(0,s.kt)("br",{parentName:"p"}),"\n","I will keep the article updated if any changes are made.")),(0,s.kt)("p",null,"To implement our solution we will use ",(0,s.kt)("a",{href:"https://www.cypress.io/"},(0,s.kt)(d,{color:"#203666",mdxType:"Highlight"},"Cypress")),".   "),(0,s.kt)("p",null,"But first... ",(0,s.kt)("em",{parentName:"p"},"What is Cypress?")),(0,s.kt)("p",null,"Cypress is a JavaScript End to End testing framework that lets you write Developer-friendly tests.",(0,s.kt)("br",{parentName:"p"}),"\n","Here is a screenshot of the ",(0,s.kt)("strong",{parentName:"p"},"Cypress user interface")," running Backstage:"),(0,s.kt)("div",{className:"image-wrapper"},(0,s.kt)(o.ImageWrapper,{alt:"Cypress",width:"100%",src:(0,i.Z)("img/backstage5675/cypress.jpg"),mdxType:"ImageWrapper"}),(0,s.kt)("em",null,"Cypress presentation")),(0,s.kt)("p",null,"In the screenshot above you can see:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"the ",(0,s.kt)("strong",{parentName:"li"},"test status menu")," used to see how many tests passed or failed"),(0,s.kt)("li",{parentName:"ul"},"the ",(0,s.kt)("strong",{parentName:"li"},"app preview")," used to see what happens in your app while the tests are running"),(0,s.kt)("li",{parentName:"ul"},"the ",(0,s.kt)("strong",{parentName:"li"},"command log"),' which shows the different steps of your tests (also called "time travel")')),(0,s.kt)("h3",{id:"define-custom-commands"},"Define custom commands"),(0,s.kt)("p",null,"Cypress comes with its own API for creating custom commands that we can use in our tests.   "),(0,s.kt)("p",null,"We will define two commands:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"loginAsGuest")," to log the User as a guest by setting the custom cookie ",(0,s.kt)("inlineCode",{parentName:"li"},"@backstage/core:SignInPage:provider")," to ",(0,s.kt)("inlineCode",{parentName:"li"},"guest")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"getTechDocsShadowRoot")," to get the shadow DOM root of the TechDocs site more easily")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="support/commands.js"',title:'"support/commands.js"'},"Cypress.Commands.add('loginAsGuest', () => {\n  window.localStorage.setItem('@backstage/core:SignInPage:provider', 'guest');\n});\n\nCypress.Commands.add('getTechDocsShadowRoot', () => {\n  cy.get('[data-testid=\"techdocs-content-shadowroot\"]').shadow();\n});\n")),(0,s.kt)("h3",{id:"configure-the-viewport"},"Configure the viewport"),(0,s.kt)("p",null,"In order to make certain elements visible (like the table of contents), we have to set a custom viewport size.\nWe will take the ",(0,s.kt)("inlineCode",{parentName:"p"},"macbook-15")," preset dimensions and define those values inside the ",(0,s.kt)("inlineCode",{parentName:"p"},"cypress.json")," configuration file.",(0,s.kt)("br",{parentName:"p"}),"\n","This will tell Cypress to set a custom screen size for our application."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="cypress.json"',title:'"cypress.json"'},'{\n  "viewportWidth": 1440,\n  "viewportHeight": 900\n}\n')),(0,s.kt)("h3",{id:"add-our-first-tests"},"Add our first tests"),(0,s.kt)("p",null,"Our first test will be to check that the User can correctly access the TechDocs home page.   "),(0,s.kt)("p",null,"We can access it by visiting the ",(0,s.kt)("inlineCode",{parentName:"p"},"/docs")," endpoint."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"it('should navigate to the home TechDocs page', () => {\n  cy.visit('/docs');\n  cy.contains('Documentation');\n});\n")),(0,s.kt)("p",null,"Or we can access it through the Backstage context via the primary navigation bar to the left."),(0,s.kt)("div",{className:"image-wrapper"},(0,s.kt)(o.ImageWrapper,{alt:"Navigating to TechDocs",width:"100%",src:(0,i.Z)("img/backstage5675/navigating-to-techdocs.jpg"),mdxType:"ImageWrapper"})),(0,s.kt)("br",null),(0,s.kt)("p",null,"Writing the corresponding Cypress tests gives us the following code."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"it('should navigate to the TechDocs page via the primary navigation bar', () => {\n  cy.visit('/');\n  cy.get('[data-testid=\"sidebar-root\"]')\n    .get('div')\n    .get('a[href=\"/docs\"]')\n    .click();\n\n  cy.contains('Documentation');\n});\n\nit('should navigate to the TechDocs home page from the \"Overview\" tab', () => {\n  cy.visit('/docs');\n  cy.get('[data-testid=\"read_docs\"]').eq(0).click();\n\n  cy.location().should(loc => {\n    expect(loc.pathname).to.eq('/docs/default/Component/backstage');\n  });\n});\n")),(0,s.kt)("p",null,"Note that we use the ",(0,s.kt)("inlineCode",{parentName:"p"},"data-testid")," selector as by default Cypress will favor ",(0,s.kt)("a",{href:"https://docs.cypress.io/guides/core-concepts/test-runner#Uniqueness"},(0,s.kt)(d,{color:"#203666",mdxType:"Highlight"},"these selectors")),".",(0,s.kt)("br",{parentName:"p"}),"\n","By retrieving the elements with a ",(0,s.kt)("inlineCode",{parentName:"p"},"data-testid")," attribute, we make sure that our tests are not coupled to the behavior or styling of the element.",(0,s.kt)("br",{parentName:"p"}),"\n","It also allows us to show that this element is used within our tests so that everyone is aware."),(0,s.kt)("p",null,"Once we have selected a specific TechDocs entity, we can check that the User can correctly navigate within the TechDocs pages via the navigation bar to the left."),(0,s.kt)("div",{className:"image-wrapper"},(0,s.kt)(o.ImageWrapper,{alt:"Navigating bar",width:"100%",src:(0,i.Z)("img/backstage5675/navigation-bar.jpg"),mdxType:"ImageWrapper"})),(0,s.kt)("p",null,"We will visit the corresponding TechDocs entity page and simulate the clicks on the navigation bar items: ",(0,s.kt)("inlineCode",{parentName:"p"},"Overview > Roadmap"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"it('should navigate to the TechDocs page via the navigation bar', () => {\n  cy.visit('/docs/default/Component/backstage');\n\n  cy.getTechDocsShadowRoot().within(() => {\n    cy.get('[data-testid=\"md-nav-overview\"]').click();\n    cy.get('[data-testid=\"md-nav-roadmap\"]').click();\n\n    cy.contains('Phases');\n    cy.contains('Detailed roadmap');\n  });\n});\n")),(0,s.kt)("p",null,"The User can also navigate within the current page via the table of contents to the right.",(0,s.kt)("br",{parentName:"p"}),"\n","By clicking on an anchor link, the page will scroll to the selected item in the page."),(0,s.kt)("div",{className:"image-wrapper"},(0,s.kt)(o.ImageWrapper,{alt:"Check scroll position",width:"450px",src:(0,i.Z)("img/backstage5675/scroll-position.jpg"),mdxType:"ImageWrapper"})),(0,s.kt)("br",null),(0,s.kt)("p",null,"To test that we have scrolled to the correct element we will check that the ",(0,s.kt)("inlineCode",{parentName:"p"},"offsetTop")," value of our element equals the ",(0,s.kt)("inlineCode",{parentName:"p"},"scrollY")," of the ",(0,s.kt)("inlineCode",{parentName:"p"},"window")," object."),(0,s.kt)("div",{className:"image-wrapper"},(0,s.kt)(o.ImageWrapper,{alt:"Table of content",width:"100%",src:(0,i.Z)("img/backstage5675/table-of-content.jpg"),mdxType:"ImageWrapper"})),(0,s.kt)("br",null),(0,s.kt)("p",null,"Here is the Cypress test that covers this case."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"it('should navigate to the TechDocs page via the table of contents - Level 1', () => {\n  cy.visit('/docs/default/Component/backstage/overview/roadmap');\n\n  return cy.getTechDocsShadowRoot().within(() => {\n    cy.get('[data-testid=\"md-nav-phases\"]').click();\n\n    cy.get('#phases').then($el => {\n      cy.window()\n        .its('scrollY')\n        .should($scrollY => {\n          expect($scrollY).to.be.closeTo($el[0].offsetTop, 200);\n        });\n    });\n  });\n});\n")),(0,s.kt)("p",null,"The last test that we want to cover is the ",(0,s.kt)("inlineCode",{parentName:"p"},"Previous/Next")," links at the bottom of each page.",(0,s.kt)("br",{parentName:"p"}),"\n","We'll check that the ",(0,s.kt)("inlineCode",{parentName:"p"},"Previous")," link takes us to the previous page."),(0,s.kt)("div",{className:"image-wrapper"},(0,s.kt)(o.ImageWrapper,{alt:"Prev-Next page",width:"100%",src:(0,i.Z)("img/backstage5675/prev-next.jpg"),mdxType:"ImageWrapper"})),(0,s.kt)("p",null,"Once again we will visit a TechDocs page, click on the previous link defined by its class ",(0,s.kt)("inlineCode",{parentName:"p"},"md-footer-nav__link.md-footer-nav__link--next")," and make sure that it takes us to the correct page."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"it('should navigate to the next page within a TechDocs page', () => {\n  cy.visit('/docs/default/Component/backstage/overview/roadmap');\n  cy.scrollTo('bottom');\n\n  cy.getTechDocsShadowRoot().within(() => {\n    cy.get('.md-footer-nav__link.md-footer-nav__link--next').click();\n\n    cy.location().should(loc => {\n      expect(loc.pathname).to.eq(\n        '/docs/default/Component/backstage/overview/vision/',\n      );\n    });\n  });\n});\n")),(0,s.kt)("h2",{id:"final-result"},"Final result"),(0,s.kt)("div",{className:"image-wrapper"},(0,s.kt)(o.ImageWrapper,{alt:"Results",width:"100%",src:(0,i.Z)("img/backstage5675/results.jpg"),mdxType:"ImageWrapper"})),(0,s.kt)("p",null,"Here is the final test-suite that covers the different interactions between the Backstage context and the TechDocs site embedded. As we can see all the tests are completed in ",(0,s.kt)("strong",{parentName:"p"},"32s"),"."),(0,s.kt)("div",{className:"image-wrapper"},(0,s.kt)(o.ImageWrapper,{alt:"Contribution presentation",width:"100%",src:(0,i.Z)("img/backstage5675/e2e.png"),mdxType:"ImageWrapper"}),(0,s.kt)("em",null,"Cypress test-suite")),(0,s.kt)("h2",{id:"takeaway"},"Takeaway"),(0,s.kt)("h3",{id:"problems-encountered"},"Problems encountered"),(0,s.kt)("p",null,"As the TechDocs frontend is strongly linked to the API response and we don't know how all this stuff will change in the future, we will certainly not mock the API response as we used to do but let the backend do its job.",(0,s.kt)("br",{parentName:"p"}),"\n","It means that I will certainly need to remove the API mocks in the tests and add data-testid attributes dynamically inside the generated html files."),(0,s.kt)("h3",{id:"what-did-i-learn-"},"What did I learn ?"),(0,s.kt)("p",null,"This contribution has allowed me to define some user workflows and use ",(0,s.kt)("strong",{parentName:"p"},"Cypress")," to test them."))}m.isMDXComponent=!0},6395:function(e,t,a){a.r(t),a.d(t,{ImageWrapper:function(){return h},Merged:function(){return u},Open:function(){return m},Status:function(){return g},assets:function(){return p},contentTitle:function(){return l},default:function(){return v},frontMatter:function(){return r},metadata:function(){return c},toc:function(){return d}});var n=a(3117),s=a(7294),i=a(3905),o=a(2879);const r={},l=void 0,c={unversionedId:"utils",id:"utils",title:"utils",description:"",source:"@site/docs/utils.md",sourceDirName:".",slug:"/utils",permalink:"/docs/utils",draft:!1,editUrl:"https://github.com/ayshiff/my-open-source-journey/docs/utils.md",tags:[],version:"current",frontMatter:{}},p={},d=[],u=e=>{let{date:t}=e;return(0,i.kt)("div",null,(0,i.kt)("div",{className:"merged"},(0,i.kt)("span",null,(0,i.kt)("svg",{height:"16",viewBox:"0 0 16 16",version:"1.1",width:"16",fill:"white","aria-hidden":"true",className:"status_svg"},(0,i.kt)("path",{fillRule:"evenodd",d:"M5 3.254V3.25v.005a.75.75 0 110-.005v.004zm.45 1.9a2.25 2.25 0 10-1.95.218v5.256a2.25 2.25 0 101.5 0V7.123A5.735 5.735 0 009.25 9h1.378a2.251 2.251 0 100-1.5H9.25a4.25 4.25 0 01-3.8-2.346zM12.75 9a.75.75 0 100-1.5.75.75 0 000 1.5zm-8.5 4.5a.75.75 0 100-1.5.75.75 0 000 1.5z"})),"Merged")),t||null)},h=e=>{let{src:t,alt:a,width:n}=e;const[r,l]=s.useState(!1);return(0,i.kt)("div",null,(0,i.kt)("div",{className:"image-zoom",onClick:()=>l(!0)},(0,i.kt)("img",{src:t,alt:a,width:n})),r&&(0,i.kt)(o.Z,{mainSrc:t,onCloseRequest:()=>l(!1),mdxType:"Lightbox"}))},m=e=>{let{date:t}=e;return(0,i.kt)("div",null,(0,i.kt)("div",{className:"open"},(0,i.kt)("span",null,(0,i.kt)("svg",{height:"16",viewBox:"0 0 16 16",version:"1.1",width:"16",fill:"white","aria-hidden":"true",className:"status_svg"},(0,i.kt)("path",{fillRule:"evenodd",d:"M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z"})),"Open")),t||null)},g=e=>{let{url:t}=e;const[a,n]=s.useState(null);return s.useEffect((()=>{let e=!0;return fetch(t).then((e=>e.json())).then((t=>{e&&n(t.merged)})),()=>{e=!1}}),[]),null===a?(0,i.kt)("div",null):!0===a?(0,i.kt)(u,{mdxType:"Merged"}):(0,i.kt)(m,{mdxType:"Open"})},k={toc:d,Merged:u,ImageWrapper:h,Open:m,Status:g};function v(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},k,a,{components:t,mdxType:"MDXLayout"}))}v.isMDXComponent=!0}}]);