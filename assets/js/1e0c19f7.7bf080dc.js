"use strict";(self.webpackChunkthe_open_source_with_remi=self.webpackChunkthe_open_source_with_remi||[]).push([[303,364],{3919:function(e,t,n){function a(e){return!0===/^(\w*:|\/\/)/.test(e)}function s(e){return void 0!==e&&!a(e)}n.d(t,{b:function(){return a},Z:function(){return s}})},4996:function(e,t,n){n.d(t,{C:function(){return i},Z:function(){return r}});var a=n(2263),s=n(3919);function i(){var e=(0,a.Z)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,i=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,a){var i=void 0===a?{}:a,r=i.forcePrependBaseUrl,o=void 0!==r&&r,l=i.absolute,c=void 0!==l&&l;if(!n)return n;if(n.startsWith("#"))return n;if((0,s.b)(n))return n;if(o)return t+n;var u=n.startsWith(t)?n:t+n.replace(/^\//,"");return c?e+u:u}(i,n,e,t)}}}function r(e,t){return void 0===t&&(t={}),(0,i().withBaseUrl)(e,t)}},5317:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return m},Highlight:function(){return d},toc:function(){return p},default:function(){return g}});var a=n(3117),s=n(102),i=(n(7294),n(3905)),r=n(4996),o=n(6395),l=["components"],c={id:"changesets80",title:"Changesets - Comment on released PRs and issues",sidebar_label:"8. Changesets - Comment on released PRs and issues"},u=void 0,m={unversionedId:"contributions/changesets80",id:"contributions/changesets80",isDocsHomePage:!1,title:"Changesets - Comment on released PRs and issues",description:"backgroundColor: color,",source:"@site/docs/contributions/changesets#80.md",sourceDirName:"contributions",slug:"/contributions/changesets80",permalink:"/docs/contributions/changesets80",editUrl:"https://github.com/ayshiff/my-open-source-journey/docs/contributions/changesets#80.md",tags:[],version:"current",frontMatter:{id:"changesets80",title:"Changesets - Comment on released PRs and issues",sidebar_label:"8. Changesets - Comment on released PRs and issues"},sidebar:"docs",previous:{title:"7. ConsoleMe - AWS IAM policy linting",permalink:"/docs/contributions/consoleme9008"},next:{title:"9. Caramel - Pipe operator support",permalink:"/docs/contributions/caramel91"}},d=function(e){var t=e.children,n=e.color;return(0,i.kt)("span",{style:{backgroundColor:n,borderRadius:"2px",color:"#fff",padding:"0.2rem",fontWeight:600}},t)},p=[{value:"Introduction",id:"introduction",children:[{value:"Project",id:"project",children:[],level:3},{value:"Context",id:"context",children:[],level:3},{value:"Current behavior",id:"current-behavior",children:[],level:3}],level:2},{value:"Implement the solution",id:"implement-the-solution",children:[{value:"Workflow",id:"workflow",children:[],level:3}],level:2},{value:"Final result",id:"final-result",children:[],level:2},{value:"Takeaway",id:"takeaway",children:[{value:"Problems encountered",id:"problems-encountered",children:[],level:3},{value:"What did I learn ?",id:"what-did-i-learn-",children:[],level:3}],level:2}],h={Highlight:d,toc:p};function g(e){var t=e.components,n=(0,s.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"pr_infos"},(0,i.kt)("div",{className:"marginBottom"},(0,i.kt)("div",null,(0,i.kt)(o.Open,{date:"22 Mar 2021",mdxType:"Open"})),(0,i.kt)("span",{className:"badge badge--secondary marginRight"},"GitHub"),(0,i.kt)("span",{className:"badge badge--secondary marginRight"},"Versioning"),(0,i.kt)("span",{className:"badge badge--secondary marginRight"},"Changelogs"),(0,i.kt)("span",{className:"badge badge--secondary marginRight"},"Monorepos"))),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Contribution link")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/changesets/action/pull/80"},"https://github.com/changesets/action/pull/80")))),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Contribution Type")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This contribution is a new ",(0,i.kt)("strong",{parentName:"p"},"feature"),"."))),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("div",{className:"image-wrapper"},(0,i.kt)(o.ImageWrapper,{src:(0,r.Z)("img/changesets/cover.jpg"),width:"100%",alt:"Contribution presentation",mdxType:"ImageWrapper"}),(0,i.kt)("em",null,"Changesets releases")),(0,i.kt)("h3",{id:"project"},"Project"),(0,i.kt)("p",null,"You can find the ",(0,i.kt)("strong",{parentName:"p"},"Changesets project presentation")," ",(0,i.kt)("a",{href:"/docs/projects/changesets"},(0,i.kt)(d,{color:"#203666",mdxType:"Highlight"},"here")),"."),(0,i.kt)("h3",{id:"context"},"Context"),(0,i.kt)("p",null,"This contribution will be made to a specific part of the Changesets project, the ",(0,i.kt)("a",{href:"https://github.com/changesets/action"},(0,i.kt)(d,{color:"#203666",mdxType:"Highlight"},"Changesets Release Action")),".",(0,i.kt)("br",{parentName:"p"}),"\n","This action will create a release pull request with all the package versions and changelogs updated.  "),(0,i.kt)("p",null,"Here is a workflow example."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"name: Release\n\non:\n  push:\n    branches:\n      - master\n\njobs:\n  release:\n    name: Release\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout Repo\n        uses: actions/checkout@master\n        with:\n          fetch-depth: 0\n\n      - name: Setup Node.js 12.x\n        uses: actions/setup-node@master\n        with:\n          node-version: 12.x\n\n      - name: Install Dependencies\n        run: yarn\n\n      - name: Create Release Pull Request\n        uses: changesets/action@master\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n")),(0,i.kt)("h3",{id:"current-behavior"},"Current behavior"),(0,i.kt)("a",{href:"https://github.com/semantic-release/semantic-release"},(0,i.kt)(d,{color:"#203666",mdxType:"Highlight"},"Semantic-release"))," (a tool for automating the whole package release workflow) has a feature whereby once a commit which solves an issue is released, the action comments on the associated issue and PR thread to notify the user.",(0,i.kt)("p",null,'This feature would be a "nice to have" feature for the changesets project.'),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Issue link")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/atlassian/changesets/issues/511"},"https://github.com/atlassian/changesets/issues/511")))),(0,i.kt)("h2",{id:"implement-the-solution"},"Implement the solution"),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"code blocks")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The code blocks are intentionally incomplete for the sake of readability.",(0,i.kt)("br",{parentName:"p"}),"\n","If you want to read the full code you'll find it in the PR link at the top."))),(0,i.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"changes")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This PR being still Open, some parts are likely to change.",(0,i.kt)("br",{parentName:"p"}),"\n","I will keep the article updated if any changes are made."))),(0,i.kt)("p",null,"Here is the main logic to comment on PRs and issues that have been released.",(0,i.kt)("br",{parentName:"p"}),"\n","The boolean variable ",(0,i.kt)("inlineCode",{parentName:"p"},"comment")," lets the User activate or not the feature via an input property."),(0,i.kt)("p",null,"The comment logic is triggered once a whole repo release is published."),(0,i.kt)("div",{className:"image-wrapper"},(0,i.kt)(o.ImageWrapper,{src:(0,r.Z)("img/changesets/workflow.png"),width:"80%",alt:"Workflow",mdxType:"ImageWrapper"})),(0,i.kt)("h3",{id:"workflow"},"Workflow"),(0,i.kt)("p",null,"Here is the different steps of the workflow with their associated code blocks."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"NOTE:")," We are using the ",(0,i.kt)("a",{href:"https://octokit.github.io/rest.js/v18"},(0,i.kt)(d,{color:"#203666",mdxType:"Highlight"},"octokit"))," GitHub REST API client for JavaScript. This is an official client for interacting with the GitHub API."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Retrieve the tag associated with the release"),(0,i.kt)("li",{parentName:"ol"},"Take the commit sha associated with the tag")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'const repo = github.context.repo;\n\nlet tagPage = 0;\nlet tagFound = false;\nlet tagCommitSha = "";\n\n/* 1 */\nwhile (!tagFound) {\n  await octokit.repos\n    .listTags({\n      ...repo,\n      per_page: 100,\n      page: tagPage,\n    })\n    .then(({ data }) => {\n      const tag = data.find((el) => el.name === tagName);\n      if (tag) {\n        tagFound = true;\n        /* 2 */\n        tagCommitSha = tag.commit.sha;\n      }\n      tagPage += 1;\n    })\n    .catch((err) => console.warn(err));\n}\n')),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Retrieve all the commits starting from the tag commit sha")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"/* 3 */\nconst commits = await octokit.repos\n  .listCommits({\n    ...repo,\n    sha: tagCommitSha,\n  })\n  .then(({ data }) => data);\n\nconst shas = commits.map(({ sha }) => sha);\n\nconst searchQueries = getSearchQueries(\n  `repo:${repo.owner}/${repo.repo}+type:pr+is:merged`,\n  shas\n).map(\n  async (q) =>\n    (await octokit.search.issuesAndPullRequests({ q })).data.items\n);\n\nconst queries = await (await Promise.all(searchQueries)).flat();\n\nconst queriesSet = queries.map((el) => el.number);\n\nconst filteredQueries = queries.filter(\n  (el, i) => queriesSet.indexOf(el.number) === i\n  );\n")),(0,i.kt)("p",null,"Here is the ",(0,i.kt)("inlineCode",{parentName:"p"},"getSearchQueries")," helper:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Definition:")," Build a search query to retrieve pulls with commit hashes.   "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Example:")," ",(0,i.kt)("inlineCode",{parentName:"li"},"repo:<OWNER>/<REPO>+type:pr+is:merged+hash:<FIRST_COMMIT_HASH>+hash:<SECOND_COMMIT_HASH>..."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const getSearchQueries = (base: string, commits: string[]) => {\n  return commits.reduce((searches, commit) => {\n    const lastSearch = searches[searches.length - 1];\n\n    if (lastSearch && lastSearch.length + commit.length <= 256 - 6) {\n      searches[searches.length - 1] = `${lastSearch}+hash:${commit}`;\n    } else {\n      searches.push(`${base}+hash:${commit}`);\n    }\n\n    return searches;\n  }, [] as string[]);\n};\n")),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},"Retrieve the PRs with commits sha matching the release commits")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"/* 4 */\nconst pulls = await filteredQueries.filter(\n  async ({ number }) =>\n    (\n      await octokit.pulls.listCommits({\n        owner: repo.owner,\n        repo: repo.repo,\n        pull_number: number,\n      })\n    ).data.find(({ sha }) => shas.includes(sha)) ||\n    shas.includes(\n      (\n        await octokit.pulls.get({\n          owner: repo.owner,\n          repo: repo.repo,\n          pull_number: number,\n        })\n      ).data.merge_commit_sha\n    )\n);\n")),(0,i.kt)("ol",{start:5},(0,i.kt)("li",{parentName:"ol"},"Map through the list of commits and the list of PRs to find commit message or PRs body that closes an issue and get the issue number.   ")),(0,i.kt)("p",null,"We will be using a library called ",(0,i.kt)("a",{href:"https://github.com/pvdlg/issue-parser"},(0,i.kt)(d,{color:"#203666",mdxType:"Highlight"},"issue-parser"))," which will parse the content of the Pull Request body and find ",(0,i.kt)("a",{href:"https://docs.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue"},(0,i.kt)(d,{color:"#203666",mdxType:"Highlight"},"closing keywords"))," like ",(0,i.kt)("inlineCode",{parentName:"p"},"Fix #25"),"."),(0,i.kt)("p",null,"For example, given the PR body content ",(0,i.kt)("inlineCode",{parentName:"p"},'"Issue description, Fix #25"')," it will give the following output:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "actions": {\n        "close": [\n            {\n                "raw": "Fix #25",\n                "action": "Fix",\n                "prefix": "#",\n                "issue": "25"\n            }\n        ],\n        "duplicate": []\n    },\n    "refs": [],\n    "mentions": []\n}\n')),(0,i.kt)("p",null,"We can then retrieve the referenced issue numbers with: ",(0,i.kt)("inlineCode",{parentName:"p"},"actions.close.map({issue}) => issue)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"/* 5 */\nimport issueParser from 'issue-parser';\nconst parse = issueParser('github');\n\nconst issues = [\n  ...pulls.map((pr) => pr.body),\n  ...commits.map(({ commit }) => commit.message),\n].reduce((issues, message) => {\n  return message\n    ? issues.concat(\n        parser(message)\n          .actions.close.filter(\n            (action) =>\n              action.slug === null ||\n              action.slug === undefined ||\n              action.slug === `${repo.owner}/${repo.repo}`\n          )\n          .map((action) => ({ number: Number.parseInt(action.issue, 10) }))\n      )\n    : issues;\n}, [] as { number: number }[]);\n")),(0,i.kt)("ol",{start:6},(0,i.kt)("li",{parentName:"ol"},"Create a comment for each issue and PR")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"/* 6 */\nawait Promise.all(\n  [...new Set([...pulls, ...issues].map(({ number }) => number))].map(\n    async (number) => {\n      const issueComment = {\n        ...repo,\n        issue_number: number,\n        body: getReleaseMessage(htmlUrl, tagName),\n      };\n      octokit.issues.createComment(issueComment);\n    }\n  )\n);\n")),(0,i.kt)("h2",{id:"final-result"},"Final result"),(0,i.kt)("p",null,"Every time a release is made, a comment will be made to PRs and issues that have been released.   "),(0,i.kt)("p",null,"I also created a ",(0,i.kt)("a",{href:"https://codesandbox.io/s/winter-bird-pwn6v?file=/src/index.js"},(0,i.kt)(d,{color:"#203666",mdxType:"Highlight"},"codesandbox project"))," where you can see the logic to get the issues and pull-requests associated to a release more easily. You can use your own GitHub token to increase the API rate limit."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"NOTE:")," In codesandbox, considering that the code does not run at the time the release is created, we will get more recent commits. This will not happen in the real world."),(0,i.kt)("h2",{id:"takeaway"},"Takeaway"),(0,i.kt)("h3",{id:"problems-encountered"},"Problems encountered"),(0,i.kt)("p",null,"Setting up the environment locally as well as testing the behavior of the developed functionality was a bit complicated because there was a strong dependency with GitHub.",(0,i.kt)("br",{parentName:"p"}),"\n","(e.g. Some scenarios to reproduce as creating a release...)"),(0,i.kt)("h3",{id:"what-did-i-learn-"},"What did I learn ?"),(0,i.kt)("p",null,"This contribution allowed me to learn more about ",(0,i.kt)("strong",{parentName:"p"},"package release workflow")," and ",(0,i.kt)("strong",{parentName:"p"},"GitHub Actions"),"."))}g.isMDXComponent=!0},6395:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return m},toc:function(){return d},Merged:function(){return p},ImageWrapper:function(){return h},Open:function(){return g},Status:function(){return k},default:function(){return f}});var a=n(3117),s=n(102),i=n(7294),r=n(3905),o=n(2879),l=["components"],c={},u=void 0,m={unversionedId:"utils",id:"utils",isDocsHomePage:!1,title:"utils",description:"<svg",source:"@site/docs/utils.md",sourceDirName:".",slug:"/utils",permalink:"/docs/utils",editUrl:"https://github.com/ayshiff/my-open-source-journey/docs/utils.md",tags:[],version:"current",frontMatter:{}},d=[],p=function(e){var t=e.date;return(0,r.kt)("div",null,(0,r.kt)("div",{className:"merged"},(0,r.kt)("span",null,(0,r.kt)("svg",{height:"16",viewBox:"0 0 16 16",version:"1.1",width:"16",fill:"white","aria-hidden":"true",className:"status_svg"},(0,r.kt)("path",{fillRule:"evenodd",d:"M5 3.254V3.25v.005a.75.75 0 110-.005v.004zm.45 1.9a2.25 2.25 0 10-1.95.218v5.256a2.25 2.25 0 101.5 0V7.123A5.735 5.735 0 009.25 9h1.378a2.251 2.251 0 100-1.5H9.25a4.25 4.25 0 01-3.8-2.346zM12.75 9a.75.75 0 100-1.5.75.75 0 000 1.5zm-8.5 4.5a.75.75 0 100-1.5.75.75 0 000 1.5z"})),"Merged")),t||null)},h=function(e){var t=e.src,n=e.alt,a=e.width,s=i.useState(!1),l=s[0],c=s[1];return(0,r.kt)("div",null,(0,r.kt)("div",{className:"image-zoom",onClick:function(){return c(!0)}},(0,r.kt)("img",{src:t,alt:n,width:a})),l&&(0,r.kt)(o.Z,{mainSrc:t,onCloseRequest:function(){return c(!1)},mdxType:"Lightbox"}))},g=function(e){var t=e.date;return(0,r.kt)("div",null,(0,r.kt)("div",{className:"open"},(0,r.kt)("span",null,(0,r.kt)("svg",{height:"16",viewBox:"0 0 16 16",version:"1.1",width:"16",fill:"white","aria-hidden":"true",className:"status_svg"},(0,r.kt)("path",{fillRule:"evenodd",d:"M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z"})),"Open")),t||null)},k=function(e){var t=e.url,n=i.useState(null),a=n[0],s=n[1];return i.useEffect((function(){var e=!0;return fetch(t).then((function(e){return e.json()})).then((function(t){e&&s(t.merged)})),function(){e=!1}}),[]),null===a?(0,r.kt)("div",null):!0===a?(0,r.kt)(p,{mdxType:"Merged"}):(0,r.kt)(g,{mdxType:"Open"})},v={toc:d,Merged:p,ImageWrapper:h,Open:g,Status:k};function f(e){var t=e.components,n=(0,s.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},v,n,{components:t,mdxType:"MDXLayout"}))}f.isMDXComponent=!0}}]);