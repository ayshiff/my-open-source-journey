"use strict";(self.webpackChunkthe_open_source_with_remi=self.webpackChunkthe_open_source_with_remi||[]).push([[582],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(r),d=a,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||o;return r?n.createElement(f,i(i({ref:t},p),{},{components:r})):n.createElement(f,i({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[u]="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4864:function(e,t,r){r.r(t),r.d(t,{Highlight:function(){return p},assets:function(){return s},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return u}});var n=r(3117),a=(r(7294),r(3905)),o=r(4996);const i={id:"caramel",title:"AbstractMachinesLab - Caramel"},c=void 0,l={unversionedId:"projects/caramel",id:"projects/caramel",title:"AbstractMachinesLab - Caramel",description:"Erlang",source:"@site/docs/projects/caramel.md",sourceDirName:"projects",slug:"/projects/caramel",permalink:"/docs/projects/caramel",draft:!1,editUrl:"https://github.com/ayshiff/my-open-source-journey/docs/projects/caramel.md",tags:[],version:"current",frontMatter:{id:"caramel",title:"AbstractMachinesLab - Caramel"},sidebar:"docs",previous:{title:"Octobox",permalink:"/docs/projects/octobox"},next:{title:"CloudSkiff - driftctl",permalink:"/docs/projects/driftctl"}},s={},p=e=>{let{children:t,color:r}=e;return(0,a.kt)("span",{style:{backgroundColor:r,borderRadius:"2px",color:"#fff",padding:"0.2rem",fontWeight:600}},t)},u=[{value:"Project description",id:"project-description",level:2},{value:"Related contributions",id:"related-contributions",level:3}],m={Highlight:p,toc:u};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("div",{className:"marginBottom"},(0,a.kt)("span",{className:"badge badge--secondary marginRight"},"Erlang"),(0,a.kt)("span",{className:"badge badge--secondary marginRight"},"Elixir"),(0,a.kt)("span",{className:"badge badge--secondary marginRight"},"Compiler"),(0,a.kt)("span",{className:"badge badge--secondary marginRight"},"Ocaml"),(0,a.kt)("span",{className:"badge badge--secondary marginRight"},"functional-language")),(0,a.kt)("h2",{id:"project-description"},"Project description"),(0,a.kt)("div",{className:"image-wrapper"},(0,a.kt)("img",{alt:"Caramel presentation",src:(0,o.Z)("img/caramel/caramel.png"),width:"200"})),(0,a.kt)("br",null),(0,a.kt)("p",null,"Caramel is a functional language for building type-safe, scalable, and maintainable applications."),(0,a.kt)("p",null,"It leverages the OCaml compiler and the Erlang VM."),(0,a.kt)("p",null,"For more information about Caramel you can find it ",(0,a.kt)("a",{href:"https://caramel.run/"},(0,a.kt)(p,{color:"#203666",mdxType:"Highlight"},"here")),"."),(0,a.kt)("p",null,"Here is a Hello World example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ocaml"},'(* file: hello_world.ml *)\nlet main _ = Io.format "~s~n" ["Hello World"]\n')),(0,a.kt)("h3",{id:"related-contributions"},"Related contributions"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{href:"/docs/contributions/caramel91"},(0,a.kt)(p,{color:"#203666",mdxType:"Highlight"},"9. Caramel - Pipe operator support")))))}d.isMDXComponent=!0}}]);