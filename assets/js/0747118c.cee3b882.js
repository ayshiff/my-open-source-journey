"use strict";(self.webpackChunkthe_open_source_with_remi=self.webpackChunkthe_open_source_with_remi||[]).push([[443],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=s(n),d=o,m=f["".concat(l,".").concat(d)]||f[d]||u[d]||i;return n?r.createElement(m,a(a({ref:t},p),{},{components:n})):r.createElement(m,a({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3919:function(e,t,n){function r(e){return!0===/^(\w*:|\/\/)/.test(e)}function o(e){return void 0!==e&&!r(e)}n.d(t,{b:function(){return r},Z:function(){return o}})},4996:function(e,t,n){n.d(t,{C:function(){return i},Z:function(){return a}});var r=n(2263),o=n(3919);function i(){var e=(0,r.Z)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,i=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,r){var i=void 0===r?{}:r,a=i.forcePrependBaseUrl,c=void 0!==a&&a,l=i.absolute,s=void 0!==l&&l;if(!n)return n;if(n.startsWith("#"))return n;if((0,o.b)(n))return n;if(c)return t+n;var p=n.startsWith(t)?n:t+n.replace(/^\//,"");return s?e+p:p}(i,n,e,t)}}}function a(e,t){return void 0===t&&(t={}),(0,i().withBaseUrl)(e,t)}},746:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},Highlight:function(){return u},toc:function(){return f},default:function(){return m}});var r=n(3117),o=n(102),i=(n(7294),n(3905)),a=n(4996),c=["components"],l={id:"apple-swift-nio",title:"Apple - SwiftNIO"},s=void 0,p={unversionedId:"projects/apple-swift-nio",id:"projects/apple-swift-nio",isDocsHomePage:!1,title:"Apple - SwiftNIO",description:"backgroundColor: color,",source:"@site/docs/projects/apple-swift-nio.md",sourceDirName:"projects",slug:"/projects/apple-swift-nio",permalink:"/docs/projects/apple-swift-nio",editUrl:"https://github.com/ayshiff/my-open-source-journey/docs/projects/apple-swift-nio.md",tags:[],version:"current",frontMatter:{id:"apple-swift-nio",title:"Apple - SwiftNIO"},sidebar:"docs",previous:{title:"Spotify - Backstage",permalink:"/docs/projects/backstage"},next:{title:"Netflix - ConsoleMe",permalink:"/docs/projects/consoleme"}},u=function(e){var t=e.children,n=e.color;return(0,i.kt)("span",{style:{backgroundColor:n,borderRadius:"2px",color:"#fff",padding:"0.2rem",fontWeight:600}},t)},f=[{value:"Project description",id:"project-description",children:[{value:"Related contributions",id:"related-contributions",children:[],level:3}],level:2}],d={Highlight:u,toc:f};function m(e){var t=e.components,n=(0,o.Z)(e,c);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"marginBottom"},(0,i.kt)("span",{className:"badge badge--secondary marginRight"},"swift"),(0,i.kt)("span",{className:"badge badge--secondary marginRight"},"asynchronous-io"),(0,i.kt)("span",{className:"badge badge--secondary marginRight"},"networking"),(0,i.kt)("span",{className:"badge badge--secondary marginRight"},"event-driven")),(0,i.kt)("h2",{id:"project-description"},"Project description"),(0,i.kt)("p",null,"SwiftNIO is a NIO (",(0,i.kt)("strong",{parentName:"p"},"N"),"on Blocking ",(0,i.kt)("strong",{parentName:"p"},"I"),"nput ",(0,i.kt)("strong",{parentName:"p"},"O"),"utput) client server framework which enables quick and easy development of ",(0,i.kt)("strong",{parentName:"p"},"network applications")," in Swift.",(0,i.kt)("br",{parentName:"p"}),"\n","As indicated by its name, it uses ",(0,i.kt)("strong",{parentName:"p"},'"non-blocking I/O"')," in opposition to blocking I/O as the application doesn't wait for data to be sent to or received from the network."),(0,i.kt)("div",{className:"image-wrapper"},(0,i.kt)("img",{alt:"Non-blocking I/O",width:"700px",src:(0,a.Z)("img/swiftnio1692/non-blocking-io.png")})),(0,i.kt)("p",null,"It doesn't aim to provide high-level solutions as it is focused on providing the low-level building blocks for higher-level applications.   "),(0,i.kt)("a",{href:"https://apple.github.io/swift-nio/docs/current/NIO/index.html"},(0,i.kt)(u,{color:"#203666",mdxType:"Highlight"},"Website link")),(0,i.kt)("p",null,"Here is a list of ",(0,i.kt)("strong",{parentName:"p"},"low-level protocol")," implementations:"),(0,i.kt)("div",{className:"image-wrapper"},(0,i.kt)("img",{alt:"Low-level protocol implementations",width:"500px",src:(0,a.Z)("img/swiftnio1692/low-level.png")}),(0,i.kt)("br",null),(0,i.kt)("em",null,"Low-level protocol implementations")),(0,i.kt)("p",null,"SwiftNIO applications are constructed of 8 types of ",(0,i.kt)("strong",{parentName:"p"},"components"),":"),(0,i.kt)("div",{className:"image-wrapper"},(0,i.kt)("img",{alt:"Artchitecture",width:"700px",src:(0,a.Z)("img/swiftnio1692/architecture.png")}),(0,i.kt)("br",null),(0,i.kt)("em",null,"Basic architecture")),(0,i.kt)("h3",{id:"related-contributions"},"Related contributions"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{href:"/docs/contributions/apple-swift-nio1692"},(0,i.kt)(u,{color:"#203666",mdxType:"Highlight"},"1. SwiftNIO core - SocketAddress creation")))))}m.isMDXComponent=!0}}]);