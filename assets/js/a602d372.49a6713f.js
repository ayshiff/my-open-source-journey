"use strict";(self.webpackChunkthe_open_source_with_remi=self.webpackChunkthe_open_source_with_remi||[]).push([[560,364],{2681:function(e,t,n){n.r(t),n.d(t,{Highlight:function(){return c},assets:function(){return d},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var a=n(3117),r=(n(7294),n(3905)),o=(n(9578),n(4996)),i=n(6395);const l={id:"xlayers395",title:"xLayers - Rethink UX",sidebar_label:"2. xLayers - Rethink UX"},s=void 0,p={unversionedId:"contributions/xlayers395",id:"contributions/xlayers395",title:"xLayers - Rethink UX",description:"Angular",source:"@site/docs/contributions/xlayers#395.md",sourceDirName:"contributions",slug:"/contributions/xlayers395",permalink:"/docs/contributions/xlayers395",draft:!1,editUrl:"https://github.com/ayshiff/my-open-source-journey/docs/contributions/xlayers#395.md",tags:[],version:"current",frontMatter:{id:"xlayers395",title:"xLayers - Rethink UX",sidebar_label:"2. xLayers - Rethink UX"},sidebar:"docs",previous:{title:"1. SwiftNIO core - SocketAddress creation",permalink:"/docs/contributions/apple-swift-nio1692"},next:{title:"3. Backstage - Techdocs AWS Support",permalink:"/docs/contributions/backstage3794"}},d={},c=e=>{let{children:t,color:n}=e;return(0,r.kt)("span",{style:{backgroundColor:n,borderRadius:"2px",color:"#fff",padding:"0.2rem",fontWeight:600}},t)},u=[{value:"Introduction",id:"introduction",level:2},{value:"Project",id:"project",level:3},{value:"Context",id:"context",level:3},{value:"Current behavior",id:"current-behavior",level:3},{value:"Implement the solution",id:"implement-the-solution",level:2},{value:"Update the landing page",id:"update-the-landing-page",level:3},{value:"Update the code generation page",id:"update-the-code-generation-page",level:3},{value:"Update the store",id:"update-the-store",level:3},{value:"Final result",id:"final-result",level:2},{value:"Takeaway",id:"takeaway",level:2},{value:"Problems encountered",id:"problems-encountered",level:3},{value:"What did I learn ?",id:"what-did-i-learn-",level:3}],m={Highlight:c,toc:u};function g(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("div",{className:"pr_infos"},(0,r.kt)("div",{className:"marginBottom"},(0,r.kt)("div",null,(0,r.kt)(i.Merged,{date:"20 Nov 2020",mdxType:"Merged"})),(0,r.kt)("span",{className:"badge badge--secondary marginRight"},"Angular"),(0,r.kt)("span",{className:"badge badge--secondary marginRight"},"Typescript"),(0,r.kt)("span",{className:"badge badge--secondary marginRight"},"UX"))),(0,r.kt)("admonition",{title:"Contribution link",type:"info"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/xlayers/xlayers/pull/395"},"https://github.com/xlayers/xlayers/pull/395"))),(0,r.kt)("admonition",{title:"Contribution Type",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"This contribution is a new ",(0,r.kt)("strong",{parentName:"p"},"feature"),".")),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("div",{className:"image-wrapper"},(0,r.kt)("br",null),(0,r.kt)(i.ImageWrapper,{alt:"Contribution presentation",width:"100%",src:(0,o.Z)("img/xlayers395/cover.jpg"),mdxType:"ImageWrapper"}),(0,r.kt)("em",null,"xLayers contribution")),(0,r.kt)("h3",{id:"project"},"Project"),(0,r.kt)("p",null,"You can find the ",(0,r.kt)("a",{href:"/docs/projects/xlayers"},(0,r.kt)(c,{color:"#203666",mdxType:"Highlight"},"xLayers project presentation here")),"."),(0,r.kt)("div",{className:"image-wrapper"},(0,r.kt)("br",null),(0,r.kt)(i.ImageWrapper,{alt:"xLayers presentation",width:"500px",src:(0,o.Z)("img/xlayers395/viewer.webp"),mdxType:"ImageWrapper"}),(0,r.kt)("em",null,"The Viewer interface")),(0,r.kt)("h3",{id:"context"},"Context"),(0,r.kt)("p",null,"The main idea of the issue is to find a new workflow for the user, to ",(0,r.kt)("strong",{parentName:"p"},"rethink the UX"),"."),(0,r.kt)("p",null,"From the ",(0,r.kt)("strong",{parentName:"p"},"first")," page to the ",(0,r.kt)("strong",{parentName:"p"},"last")," one."),(0,r.kt)("h3",{id:"current-behavior"},"Current behavior"),(0,r.kt)("p",null,"Currently the user workflow looks like this:"),(0,r.kt)("div",{className:"image-wrapper"},(0,r.kt)(i.ImageWrapper,{alt:"xLayers current user workflow",src:(0,o.Z)("img/xlayers395/current-workflow.png"),width:"450px",mdxType:"ImageWrapper"}),(0,r.kt)("em",null,"Current workflow diagram")),(0,r.kt)("br",null),(0,r.kt)("p",null,"The main issue is that xLayers generates code for ",(0,r.kt)("strong",{parentName:"p"},"all")," supported framework at once.",(0,r.kt)("br",{parentName:"p"}),"\n","This could be problematic in the future if it supports ",(0,r.kt)("strong",{parentName:"p"},"more frameworks"),"."),(0,r.kt)("admonition",{title:"Issue link",type:"note"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/xlayers/xlayers/issues/379"},"https://github.com/xlayers/xlayers/issues/379"))),(0,r.kt)("h2",{id:"implement-the-solution"},"Implement the solution"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"On the landing page, we will allow users to ",(0,r.kt)("strong",{parentName:"li"},"choose their framework")," they wanna generate code for."),(0,r.kt)("li",{parentName:"ul"},"The code generation UI should only show ",(0,r.kt)("strong",{parentName:"li"},"the selected framework"),".",(0,r.kt)("br",{parentName:"li"}),"Users can ",(0,r.kt)("strong",{parentName:"li"},"switch")," the selected framework.")),(0,r.kt)("admonition",{title:"code blocks",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"The code blocks are intentionally incomplete for the sake of readability.",(0,r.kt)("br",{parentName:"p"}),"\n","If you want to read the full code you'll find it in the PR link at the top.")),(0,r.kt)("h3",{id:"update-the-landing-page"},"Update the landing page"),(0,r.kt)("p",null,"My first suggestion for this page was to implement a ",(0,r.kt)("strong",{parentName:"p"},"carousel")," with all the supported frameworks.",(0,r.kt)("br",{parentName:"p"}),"\n","By discussing with the other members of the team we decided to display only a ",(0,r.kt)("strong",{parentName:"p"},"simple list"),"."),(0,r.kt)("div",{className:"image-wrapper"},(0,r.kt)(i.ImageWrapper,{alt:"xLayers current user workflow",src:(0,o.Z)("img/xlayers395/landing-page.png"),mdxType:"ImageWrapper"}),(0,r.kt)("em",null,"The landing page wireframe")),(0,r.kt)("br",null),(0,r.kt)("p",null,"As we need to use the different ",(0,r.kt)("inlineCode",{parentName:"p"},"CodeGenKind")," (frameworks) in two different pages, I extracted a list to a shared file where we put all our ",(0,r.kt)("inlineCode",{parentName:"p"},"CodeGenKind")," elements."),(0,r.kt)("p",null,"Each element contains:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"a ",(0,r.kt)("strong",{parentName:"li"},"label")," for the text preview"),(0,r.kt)("li",{parentName:"ul"},"a ",(0,r.kt)("strong",{parentName:"li"},"svgIcon")," for the icon name"),(0,r.kt)("li",{parentName:"ul"},"a ",(0,r.kt)("strong",{parentName:"li"},"codegenType")," to reference the element")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="apps/xlayers/src/shared/codegen-list.ts"',title:'"apps/xlayers/src/shared/codegen-list.ts"'},"export interface UICodeGen {\n  label: string;\n  svgIcon: string;\n  codegenType: CodeGenKind;\n}\n\nexport const codeGenList: UICodeGen[] = [\n  {\n    label: 'Angular',\n    svgIcon: 'angular',\n    codegenType: CodeGenKind.Angular,\n  },\n  {\n    label: 'Vue',\n    svgIcon: 'vue',\n    codegenType: CodeGenKind.Vue,\n  },\n  {\n    label: 'React',\n    svgIcon: 'react',\n    codegenType: CodeGenKind.React,\n  },\n  // ...\n];\n")),(0,r.kt)("h3",{id:"update-the-code-generation-page"},"Update the code generation page"),(0,r.kt)("p",null,"As this page ",(0,r.kt)("strong",{parentName:"p"},"already includes")," a way to switch between frameworks, my first suggestion was to remove the frameworks tab bar and replace it with a simple dropdown component which will be much more ",(0,r.kt)("strong",{parentName:"p"},"unobtrusive")," and it will not disturb the user. And we also ",(0,r.kt)("strong",{parentName:"p"},"save space")," for the code editor !"),(0,r.kt)("div",{className:"image-wrapper"},(0,r.kt)(i.ImageWrapper,{alt:"xLayers current user workflow",src:(0,o.Z)("img/xlayers395/code-generation-ui.png"),mdxType:"ImageWrapper"}),(0,r.kt)("em",null,"The code generation page wireframe")),(0,r.kt)("br",null),(0,r.kt)("p",null,"Nothing magic here, we have a ",(0,r.kt)("inlineCode",{parentName:"p"},"mat-select")," containing our list of frameworks.",(0,r.kt)("br",{parentName:"p"}),"\n","The ",(0,r.kt)("inlineCode",{parentName:"p"},"mat-select-trigger")," allows us to add the framework ",(0,r.kt)("inlineCode",{parentName:"p"},"mat-icon")," inside the select.   "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="apps/xlayers/src/app/editor/code/editor-container/editor-container.component.html"',title:'"apps/xlayers/src/app/editor/code/editor-container/editor-container.component.html"'},'\x3c!-- ... --\x3e\n<mat-form-field class="framework_selection" appearance="fill">\n  <mat-label>Framework</mat-label>\n  <mat-select\n    [(ngModel)]="selectedFramework"\n    (selectionChange)="onChange($event)"\n  >\n    <mat-select-trigger>\n      <div class="flex-container">\n        <mat-icon svgIcon="{{ selectedFramework.svgIcon }}"></mat-icon\n        >{{ selectedFramework.label }}\n      </div>\n    </mat-select-trigger>\n    <mat-option *ngFor="let framework of frameworks" [value]="framework">\n      <div class="flex-container">\n        <mat-icon svgIcon="{{ framework.svgIcon }}"></mat-icon>\n        {{ framework.label }}\n      </div>\n    </mat-option>\n  </mat-select>\n</mat-form-field>\n\x3c!-- ... --\x3e\n')),(0,r.kt)("h3",{id:"update-the-store"},"Update the store"),(0,r.kt)("p",null,"As we need to make the user choice persistent between the two pages, we will update our ",(0,r.kt)("a",{href:"https://ngrx.io/"},(0,r.kt)(c,{color:"#203666",mdxType:"Highlight"},"NgRx"))," store by creating a new ",(0,r.kt)("inlineCode",{parentName:"p"},"Action")," that will be dispatched when the user choose a framework in the landing page."),(0,r.kt)("div",{className:"image-wrapper"},(0,r.kt)(i.ImageWrapper,{alt:"NgRx diagram",src:(0,o.Z)("img/xlayers395/ngrx.png"),mdxType:"ImageWrapper"}),(0,r.kt)("em",null,"NgRx diagram")),(0,r.kt)("br",null),(0,r.kt)("p",null,"This Action updates the ",(0,r.kt)("inlineCode",{parentName:"p"},"kind")," value of the ",(0,r.kt)("inlineCode",{parentName:"p"},"codegen")," state which will tell us which framework the user has chosen.\nIf for some reason the user didn't choose a framework, we set ",(0,r.kt)("inlineCode",{parentName:"p"},"kind")," to 1 (corresponding to ",(0,r.kt)("inlineCode",{parentName:"p"},"Angular"),") by default.   "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'{3-4,7-10,14-16,24-34} title="apps/xlayers/src/app/core/state/page.state.ts"',"{3-4,7-10,14-16,24-34}":!0,title:'"apps/xlayers/src/app/core/state/page.state.ts"'},"export interface CodeGenSettings {\n  kind: CodeGenKind;\n  content?: XlayersNgxEditorModel[];\n  buttons?: XlayersExporterNavBar;\n}\n\nexport class SelectCodegenKind {\n  static readonly type = '[CodeGen] Select Kind';\n  constructor(public kind: CodeGenKind) {}\n}\n\n@State<CodeGenSettings>({\n  name: 'codegen',\n  defaults: {\n    kind: 1,\n  },\n})\n@Injectable()\nexport class CodeGenState {\n  // ...\n  return codegen;\n}\n\n@Action(SelectCodegenKind)\nselectKind(\n  { setState, getState }: StateContext<CodeGenSettings>,\n  action: SelectCodegenKind\n) {\n  const state = getState();\n  setState({\n    ...state,\n    kind: action.kind,\n  });\n}\n")),(0,r.kt)("p",null,"Inside the landing page we will ",(0,r.kt)("strong",{parentName:"p"},"dispatch")," the ",(0,r.kt)("inlineCode",{parentName:"p"},"SelectCodegenKind")," action:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="apps/xlayers/src/home/landing/landing.component.ts"',title:'"apps/xlayers/src/home/landing/landing.component.ts"'},"selectFramework(framework: CodeGenKind) {\n  this.store.dispatch(new SelectCodegenKind(framework));\n  this.router.navigateByUrl('/upload');\n}\n")),(0,r.kt)("p",null,"Inside the codegen generation page, we can ",(0,r.kt)("strong",{parentName:"p"},"subscribe")," to the ",(0,r.kt)("inlineCode",{parentName:"p"},"codegen")," from our store and generate the code for the selected ",(0,r.kt)("inlineCode",{parentName:"p"},"codegen.kind"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="apps/xlayers/src/app/editor/code/editor-container/editor-container.component.ts"',title:'"apps/xlayers/src/app/editor/code/editor-container/editor-container.component.ts"'},"ngOnInit() {\n  this.store.select(CodeGenState.codegen).subscribe((codegen) => {\n    if (codegen.kind) {\n      this.selectedFramework = this.frameworks.find(\n        (framework) => framework.codegenType === codegen.kind\n      );\n    }\n    this.codeSetting = this.codegen.generate(codegen.kind);\n  });\n}\n")),(0,r.kt)("h2",{id:"final-result"},"Final result"),(0,r.kt)("p",null,"This is the final user workflow."),(0,r.kt)("div",{className:"image-wrapper"},(0,r.kt)(i.ImageWrapper,{alt:"xLayers new user workflow",src:(0,o.Z)("img/xlayers395/new-workflow.png"),width:"450px",mdxType:"ImageWrapper"}),(0,r.kt)("em",null,"New workflow diagram")),(0,r.kt)("br",null),(0,r.kt)("p",null,"Here is a small presentation of the final user workflow in xLayers."),(0,r.kt)("div",{className:"image-wrapper"},(0,r.kt)(i.ImageWrapper,{alt:"xLayers new user workflow",src:(0,o.Z)("img/xlayers395/new-workflow.gif"),mdxType:"ImageWrapper"}),(0,r.kt)("em",null,"New workflow")),(0,r.kt)("h2",{id:"takeaway"},"Takeaway"),(0,r.kt)("h3",{id:"problems-encountered"},"Problems encountered"),(0,r.kt)("p",null,"The simplest part of this contribution was the implementation of the solution.",(0,r.kt)("br",{parentName:"p"}),"\n","The design of the user experience was a little more interesting and needed us to think way more than we thought."),(0,r.kt)("h3",{id:"what-did-i-learn-"},"What did I learn ?"),(0,r.kt)("p",null,"As I said above, the richest part was the reflection around the user experience.",(0,r.kt)("br",{parentName:"p"}),"\n","In addition, I was able to discover a codebase that I did not know and apply some concepts of NgRx."))}g.isMDXComponent=!0},6395:function(e,t,n){n.r(t),n.d(t,{ImageWrapper:function(){return m},Merged:function(){return u},Open:function(){return g},Status:function(){return h},assets:function(){return d},contentTitle:function(){return s},default:function(){return w},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var a=n(3117),r=n(7294),o=n(3905),i=n(2879);const l={},s=void 0,p={unversionedId:"utils",id:"utils",title:"utils",description:"",source:"@site/docs/utils.md",sourceDirName:".",slug:"/utils",permalink:"/docs/utils",draft:!1,editUrl:"https://github.com/ayshiff/my-open-source-journey/docs/utils.md",tags:[],version:"current",frontMatter:{}},d={},c=[],u=e=>{let{date:t}=e;return(0,o.kt)("div",null,(0,o.kt)("div",{className:"merged"},(0,o.kt)("span",null,(0,o.kt)("svg",{height:"16",viewBox:"0 0 16 16",version:"1.1",width:"16",fill:"white","aria-hidden":"true",className:"status_svg"},(0,o.kt)("path",{fillRule:"evenodd",d:"M5 3.254V3.25v.005a.75.75 0 110-.005v.004zm.45 1.9a2.25 2.25 0 10-1.95.218v5.256a2.25 2.25 0 101.5 0V7.123A5.735 5.735 0 009.25 9h1.378a2.251 2.251 0 100-1.5H9.25a4.25 4.25 0 01-3.8-2.346zM12.75 9a.75.75 0 100-1.5.75.75 0 000 1.5zm-8.5 4.5a.75.75 0 100-1.5.75.75 0 000 1.5z"})),"Merged")),t||null)},m=e=>{let{src:t,alt:n,width:a}=e;const[l,s]=r.useState(!1);return(0,o.kt)("div",null,(0,o.kt)("div",{className:"image-zoom",onClick:()=>s(!0)},(0,o.kt)("img",{src:t,alt:n,width:a})),l&&(0,o.kt)(i.Z,{mainSrc:t,onCloseRequest:()=>s(!1),mdxType:"Lightbox"}))},g=e=>{let{date:t}=e;return(0,o.kt)("div",null,(0,o.kt)("div",{className:"open"},(0,o.kt)("span",null,(0,o.kt)("svg",{height:"16",viewBox:"0 0 16 16",version:"1.1",width:"16",fill:"white","aria-hidden":"true",className:"status_svg"},(0,o.kt)("path",{fillRule:"evenodd",d:"M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z"})),"Open")),t||null)},h=e=>{let{url:t}=e;const[n,a]=r.useState(null);return r.useEffect((()=>{let e=!0;return fetch(t).then((e=>e.json())).then((t=>{e&&a(t.merged)})),()=>{e=!1}}),[]),null===n?(0,o.kt)("div",null):!0===n?(0,o.kt)(u,{mdxType:"Merged"}):(0,o.kt)(g,{mdxType:"Open"})},k={toc:c,Merged:u,ImageWrapper:m,Open:g,Status:h};function w(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}))}w.isMDXComponent=!0},9578:function(e,t){t.Z={header:"header_A16n",about_container:"about_container_w76u",layout:"layout_q8_z",test:"test_di3X",about_description:"about_description_sYi_",about_profile_img:"about_profile_img_fBWI",description:"description_VY6t",heroBanner:"heroBanner_UJJx",buttons:"buttons_pzbO",features:"features_keug",featureImage:"featureImage_yA8i",arrow_down:"arrow_down_ThHu",index_highlight:"index_highlight_JkfU",article_highlight:"article_highlight_bS7b",about_highlight:"about_highlight_S6Hr","image-wrapper":"image-wrapper_F2kR"}}}]);