"use strict";(self.webpackChunkthe_open_source_with_remi=self.webpackChunkthe_open_source_with_remi||[]).push([[370,364],{3919:function(e,t,n){function a(e){return!0===/^(\w*:|\/\/)/.test(e)}function r(e){return void 0!==e&&!a(e)}n.d(t,{b:function(){return a},Z:function(){return r}})},4996:function(e,t,n){n.d(t,{C:function(){return i},Z:function(){return o}});var a=n(2263),r=n(3919);function i(){var e=(0,a.Z)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,i=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,a){var i=void 0===a?{}:a,o=i.forcePrependBaseUrl,s=void 0!==o&&o,l=i.absolute,c=void 0!==l&&l;if(!n)return n;if(n.startsWith("#"))return n;if((0,r.b)(n))return n;if(s)return t+n;var d=n.startsWith(t)?n:t+n.replace(/^\//,"");return c?e+d:d}(i,n,e,t)}}}function o(e,t){return void 0===t&&(t={}),(0,i().withBaseUrl)(e,t)}},6138:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return d},metadata:function(){return p},Highlight:function(){return m},toc:function(){return u},default:function(){return g}});var a=n(3117),r=n(102),i=(n(7294),n(3905)),o=n(4996),s=n(6395),l=["components"],c={id:"consoleme9008",title:"ConsoleMe - AWS IAM policy linting",sidebar_label:"7. ConsoleMe - AWS IAM policy linting"},d=void 0,p={unversionedId:"contributions/consoleme9008",id:"contributions/consoleme9008",isDocsHomePage:!1,title:"ConsoleMe - AWS IAM policy linting",description:"backgroundColor: color,",source:"@site/docs/contributions/consoleme#9008.md",sourceDirName:"contributions",slug:"/contributions/consoleme9008",permalink:"/docs/contributions/consoleme9008",editUrl:"https://github.com/ayshiff/my-open-source-journey/docs/contributions/consoleme#9008.md",tags:[],version:"current",frontMatter:{id:"consoleme9008",title:"ConsoleMe - AWS IAM policy linting",sidebar_label:"7. ConsoleMe - AWS IAM policy linting"},sidebar:"docs",previous:{title:"6. Octobox - Notifications filter",permalink:"/docs/contributions/octobox2597"},next:{title:"8. Changesets - Comment on released PRs and issues",permalink:"/docs/contributions/changesets80"}},m=function(e){var t=e.children,n=e.color;return(0,i.kt)("span",{style:{backgroundColor:n,borderRadius:"2px",color:"#fff",padding:"0.2rem",fontWeight:600}},t)},u=[{value:"Introduction",id:"introduction",children:[{value:"Project",id:"project",children:[],level:3},{value:"Context",id:"context",children:[{value:"Policy",id:"policy",children:[],level:4},{value:"<em>What is IAM?</em>",id:"what-is-iam",children:[],level:4},{value:"Project architecture",id:"project-architecture",children:[],level:4}],level:3},{value:"Current behavior",id:"current-behavior",children:[],level:3}],level:2},{value:"Implement the solution",id:"implement-the-solution",children:[{value:"Add the new handler",id:"add-the-new-handler",children:[],level:3},{value:"Add the parliament mocks",id:"add-the-parliament-mocks",children:[],level:3},{value:"Add the handler tests",id:"add-the-handler-tests",children:[],level:3},{value:"Add the Swagger entry",id:"add-the-swagger-entry",children:[],level:3},{value:"Integrate the errors to the editor - <em>UI</em>",id:"integrate-the-errors-to-the-editor---ui",children:[],level:3}],level:2},{value:"Final result",id:"final-result",children:[],level:2},{value:"Takeaway",id:"takeaway",children:[{value:"Problems encountered",id:"problems-encountered",children:[],level:3},{value:"What did I learn ?",id:"what-did-i-learn-",children:[],level:3}],level:2}],h={Highlight:m,toc:u};function g(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"pr_infos"},(0,i.kt)("div",{className:"marginBottom"},(0,i.kt)("div",null,(0,i.kt)(s.Merged,{date:"8 Mar 2021",mdxType:"Merged"})),(0,i.kt)("span",{className:"badge badge--secondary marginRight"},"AWS"),(0,i.kt)("span",{className:"badge badge--secondary marginRight"},"IAM"),(0,i.kt)("span",{className:"badge badge--secondary marginRight"},"Cloud permissions"),(0,i.kt)("span",{className:"badge badge--secondary marginRight"},"Python"),(0,i.kt)("span",{className:"badge badge--secondary marginRight"},"ReactJS"))),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Contribution link")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/Netflix/consoleme/pull/9008"},"https://github.com/Netflix/consoleme/pull/9008")))),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Contribution Type")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This contribution is a new ",(0,i.kt)("strong",{parentName:"p"},"feature"),"."))),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("div",{className:"image-wrapper"},(0,i.kt)(s.ImageWrapper,{src:(0,o.Z)("img/consoleme/cover.jpg"),width:"100%",alt:"Contribution presentation",mdxType:"ImageWrapper"}),(0,i.kt)("em",null,"ConsoleMe + AWS IAM Policy linting")),(0,i.kt)("h3",{id:"project"},"Project"),(0,i.kt)("p",null,"You can find the ",(0,i.kt)("strong",{parentName:"p"},"ConsoleMe project presentation")," ",(0,i.kt)("a",{href:"/docs/projects/consoleme"},(0,i.kt)(m,{color:"#203666",mdxType:"Highlight"},"here")),"."),(0,i.kt)("h3",{id:"context"},"Context"),(0,i.kt)("p",null,"In order to understand the problem that the project addresses, you need to be familiar with what a ",(0,i.kt)("strong",{parentName:"p"},"Policy")," is.",(0,i.kt)("br",{parentName:"p"}),"\n","ConsoleMe has a ",(0,i.kt)("strong",{parentName:"p"},"Policies view")," interface that allows you to list all resources across your synchronized environment from the AWS configuration such as organization's IAM roles and S3 buckets."),(0,i.kt)("h4",{id:"policy"},"Policy"),(0,i.kt)("p",null,"You can manage access by creating policies and attaching them to ",(0,i.kt)("strong",{parentName:"p"},"IAM identities")," (users - group of users - roles) or ",(0,i.kt)("strong",{parentName:"p"},"resources"),".",(0,i.kt)("br",{parentName:"p"}),"\n","A policy is an object that defines permissions when associated with an identity or a resource."),(0,i.kt)("p",null,"Here is an example of a policy that allows the user to perform all actions (",(0,i.kt)("inlineCode",{parentName:"p"},"dynamodb:*"),") on all the tables of the DynamoDB database in the account ",(0,i.kt)("inlineCode",{parentName:"p"},"123456789012"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "Version": "2012-10-17",\n  "Statement": {\n    "Effect": "Allow",\n    "Action": "dynamodb:*",\n    "Resource": "arn:aws:dynamodb:us-east-2:123456789012:table/*"\n  }\n}\n')),(0,i.kt)("h4",{id:"what-is-iam"},(0,i.kt)("em",{parentName:"h4"},"What is IAM?")),(0,i.kt)("p",null,"Identity and Access Management (IAM) is a service that helps you control access to your AWS resources.",(0,i.kt)("br",{parentName:"p"}),"\n","You can use IAM to control ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"WHO"))," can do ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"WHAT"))," on which ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"RESOURCES")),"."),(0,i.kt)("h4",{id:"project-architecture"},"Project architecture"),(0,i.kt)("p",null,"Here is the project Architecture Diagram taken from the ConsoleMe ",(0,i.kt)("a",{href:"https://hawkins.gitbook.io/consoleme/architecture"},(0,i.kt)(m,{color:"#203666",mdxType:"Highlight"},"documentation")),"."),(0,i.kt)("div",{className:"image-wrapper"},(0,i.kt)(s.ImageWrapper,{src:(0,o.Z)("img/consoleme/diagram.png"),width:"80%",alt:"Architecture Diagram",mdxType:"ImageWrapper"}),(0,i.kt)("em",null,"Architecture Diagram")),(0,i.kt)("h3",{id:"current-behavior"},"Current behavior"),(0,i.kt)("p",null,"ConsoleMe has a native policy editors which allows users to ",(0,i.kt)("strong",{parentName:"p"},"create")," or ",(0,i.kt)("strong",{parentName:"p"},"edit")," IAM roles, SQS queues, SNS topics, and S3 buckets.",(0,i.kt)("br",{parentName:"p"}),"\n","It would be interesting to show to the user the potential linting errors he may have in his document."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Issue link")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/Netflix/consoleme/issues/8933"},"https://github.com/Netflix/consoleme/issues/8933")))),(0,i.kt)("h2",{id:"implement-the-solution"},"Implement the solution"),(0,i.kt)("p",null,"Here are the user stories we will use as a reference:"),(0,i.kt)("p",null,"As a ",(0,i.kt)("em",{parentName:"p"},"TYPE_OF_USER"),", I want ",(0,i.kt)("em",{parentName:"p"},"SOME_GOAL")," so that ",(0,i.kt)("em",{parentName:"p"},"SOME_REASON"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"As a")," User ",(0,i.kt)("strong",{parentName:"li"},"I want")," to see the different linting errors on the editor ",(0,i.kt)("strong",{parentName:"li"},"so that")," I can directly see which lines need updates."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"As a")," User ",(0,i.kt)("strong",{parentName:"li"},"I want")," to see the severity of the different linting errors ",(0,i.kt)("strong",{parentName:"li"},"so that")," I can directly focus on top priority errors."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"As a")," User ",(0,i.kt)("strong",{parentName:"li"},"I want")," to see the details of the different linting errors ",(0,i.kt)("strong",{parentName:"li"},"so that")," I can understand what I need to change.")),(0,i.kt)("p",null,"To check the linting of our document we will use the ",(0,i.kt)("a",{href:"https://github.com/duo-labs/parliament"},(0,i.kt)(m,{color:"#203666",mdxType:"Highlight"},"parliament library"))," which provides a way to reviews policies."),(0,i.kt)("h3",{id:"add-the-new-handler"},"Add the new handler"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"CheckPoliciesHandler")," handler will be used to retrieve policy errors based on the provided policy string.",(0,i.kt)("br",{parentName:"p"}),"\n","We will call the method ",(0,i.kt)("inlineCode",{parentName:"p"},"analyze_policy_string")," from the ",(0,i.kt)("inlineCode",{parentName:"p"},"parliament")," library which will return a ",(0,i.kt)("inlineCode",{parentName:"p"},"Finding")," list.  "),(0,i.kt)("p",null,"We will then need to enhance each of the elements to get the complete findings because the non-enhanced Finding representation is a simple string: ",(0,i.kt)("inlineCode",{parentName:"p"},"ISSUE - DETAIL - LOCATION")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:'title="consoleme/handlers/v2/policies.py"',title:'"consoleme/handlers/v2/policies.py"'},'class CheckPoliciesHandler(BaseAPIV2Handler):\n    async def post(self):\n        """\n        POST /api/v2/policies/check\n        """\n        policy = tornado.escape.json_decode(self.request.body)\n        analyzed_policy = analyze_policy_string(policy)\n        findings = analyzed_policy.findings\n\n        enhanced_findings = []\n\n        for finding in findings:\n            enhanced_finding = enhance_finding(finding)\n            enhanced_findings.append(\n                {\n                    "issue": enhanced_finding.issue,\n                    "detail": enhanced_finding.detail,\n                    "location": enhanced_finding.location,\n                    "severity": enhanced_finding.severity,\n                    "title": enhanced_finding.title,\n                    "description": enhanced_finding.description,\n                }\n            )\n\n        self.write(json.dumps(enhanced_findings))\n        return\n')),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"CheckPoliciesHandler")," will be mapped to a new route ",(0,i.kt)("inlineCode",{parentName:"p"},"/api/v2/policies/check"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:'title="consoleme/routes.py"',title:'"consoleme/routes.py"'},'def make_app(jwt_validator=None):\n    """make_app."""\n    path = pkg_resources.resource_filename("consoleme", "templates")\n    # ... other routes\n    (r"/api/v2/policies/check", CheckPoliciesHandler),\n')),(0,i.kt)("h3",{id:"add-the-parliament-mocks"},"Add the parliament mocks"),(0,i.kt)("p",null,"In order to test our handler, we will need to mock the ",(0,i.kt)("inlineCode",{parentName:"p"},"parliament.analyze_policy_string")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"parliament.enhance_finding")," method calls.   "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:'title="tests/conftest.py"',title:'"tests/conftest.py"'},'class MockParliament:\n    def __init__(self, return_value=None):\n        self.return_value = return_value\n\n    @property\n    def findings(self):\n        return self.return_value\n\n@pytest.fixture(scope="session")\ndef parliament(session_mocker):\n    session_mocker.patch(\n        "parliament.analyze_policy_string",\n        return_value=MockParliament(\n            return_value=[\n              """\n              RESOURCE_MISMATCH\n              - {"action": "s3:GetObject", "required_format": "arn:*:s3:::*/*"}\n              - {"line": 3, "column": 18, "filepath": "test.json"}\n              """\n            ]\n        ),\n    )\n    session_mocker.patch(\n        "parliament.enhance_finding",\n        return_value=Finding(\n            issue="RESOURCE_MISMATCH",\n            title="No resources match for the given action",\n            severity="MEDIUM",\n            description="",\n            detail="",\n            location={},\n        ),\n    )\n')),(0,i.kt)("h3",{id:"add-the-handler-tests"},"Add the handler tests"),(0,i.kt)("p",null,"We can now test our handler by simulating a fetch with a ",(0,i.kt)("strong",{parentName:"p"},"given request body"),".",(0,i.kt)("br",{parentName:"p"}),"\n","We can then test that the response of the fetch is the expected one (status code ",(0,i.kt)("inlineCode",{parentName:"p"},"200")," and correct response body)."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:'title="tests/handlers/v2/test_policies.py"',title:'"tests/handlers/v2/test_policies.py"'},'def test_policies_check_api(self):\n    from consoleme.config import config\n    headers = {\n        config.get("auth.user_header_name"): "user@example.com",\n        config.get("auth.groups_header_name"): "groupa,groupb,groupc",\n    }\n    body = """{\n        "Version": "2012-10-17",\n        "Statement": {\n            "Effect": "Allow",\n            "Action":["s3:GetObject"],\n            "Resource": ["arn:aws:s3:::bucket1"]\n        }\n    }"""\n    response = self.fetch(\n        "/api/v2/policies/check", headers=headers, method="POST", body=body\n    )\n    self.assertEqual(response.code, 200)\n    response_j = json.loads(response.body)\n    self.assertEqual(len(response_j), 1)\n    first_error = response_j[0]\n    self.assertEqual(first_error["issue"], "RESOURCE_MISMATCH")\n    self.assertEqual(\n        first_error["title"], "No resources match for the given action"\n    )\n    self.assertEqual(first_error["severity"], "MEDIUM")\n\n')),(0,i.kt)("h3",{id:"add-the-swagger-entry"},"Add the Swagger entry"),(0,i.kt)("a",{href:"https://swagger.io/"},(0,i.kt)(m,{color:"#203666",mdxType:"Highlight"},"Swagger"))," is a a tool that helps you design, build and document REST APIs.",(0,i.kt)("p",null,"We will add a new entry for our route ",(0,i.kt)("inlineCode",{parentName:"p"},"/policies/check")," with a documentation about the request body and the response schema."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="swagger.yaml"',title:'"swagger.yaml"'},'/policies/check:\n  post:\n    summary: check a policy document\n    tags:\n      - policies\n    requestBody:\n      required: true\n      content:\n        application/json:\n          schema:\n            type: object\n    responses:\n      "200":\n        description: OK\n        content:\n          application/json:\n            schema:\n              $ref: "#/components/schemas/PolicyCheckModel"\n\n')),(0,i.kt)("div",{className:"image-wrapper"},(0,i.kt)(s.ImageWrapper,{src:(0,o.Z)("img/consoleme/swagger.png"),width:"400px",alt:"Swagger",mdxType:"ImageWrapper"}),(0,i.kt)("em",null,"Swagger UI - Policies check")),(0,i.kt)("h3",{id:"integrate-the-errors-to-the-editor---ui"},"Integrate the errors to the editor - ",(0,i.kt)("em",{parentName:"h3"},"UI")),(0,i.kt)("p",null,"The idea is pretty straightforward, every time the User will edit the policy, we will trigger a timeout of ",(0,i.kt)("inlineCode",{parentName:"p"},"CHECK_POLICY_TIMEOUT")," to check the linting errors of the document.",(0,i.kt)("br",{parentName:"p"}),"\n","The lint check is done with a ",(0,i.kt)("strong",{parentName:"p"},"delay")," to avoid too many calls when the user edits the document."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title=""',title:'""'},"useEffect(() => {\n  // Avoid linting errors if disabled\n  if (!enableLinting) {\n    return false;\n  }\n  timeout.current = setTimeout(() => {\n    if (policyDocument.length) {\n      policyCheck(policyDocument);\n    }\n  }, CHECK_POLICY_TIMEOUT);\n\n  return () => {\n    clearInterval(timeout.current);\n  };\n}, [policyCheck, policyDocument, enableLinting]);\n\n")),(0,i.kt)("p",null,"Once we have retrieved the linting errors from the API, we can display them in the ",(0,i.kt)("a",{href:"https://microsoft.github.io/monaco-editor/"},(0,i.kt)(m,{color:"#203666",mdxType:"Highlight"},"monaco editor")),"."),(0,i.kt)("p",null,"We will use the ",(0,i.kt)("inlineCode",{parentName:"p"},"deltaDecorations")," method on the editor instance. "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"deltaDecorations(\n  oldDecorations: string[], \n  newDecorations: IModelDeltaDecoration[]\n): string[]\n")),(0,i.kt)("p",null,"A decoration accepts some ",(0,i.kt)("inlineCode",{parentName:"p"},"options")," and a ",(0,i.kt)("inlineCode",{parentName:"p"},"range")," with the values ",(0,i.kt)("inlineCode",{parentName:"p"},"startLine"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"endLine"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"startColumn")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"endColumn"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"interface IModelDeltaDecoration {\n  options: IModelDecorationOptions;\n  range: IRange;\n}\n")),(0,i.kt)("p",null,"The parliament library can return 6 different severity type which we will group into 3 severity levels:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"INFO_ERRORS"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"MUTE | INFO | LOW")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"WARNING_ERRORS"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"MEDIUM")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CRITICAL_ERRORS"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"HIGH | CRITICAL"))),(0,i.kt)("p",null,"These groups allow us to display errors with a different color in the editor.",(0,i.kt)("br",{parentName:"p"}),"\n","This lets the user identify the different level of severity at a glance.   "),(0,i.kt)("div",{className:"image-wrapper"},(0,i.kt)(s.ImageWrapper,{src:(0,o.Z)("img/consoleme/editor.jpg"),width:"500",alt:"Editor",mdxType:"ImageWrapper"}),(0,i.kt)("em",null,"Inline policy editor")),(0,i.kt)("p",null,"The code bellow will allow us to display a highlighted area of the editor where the error is located."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'const addEditorDecorations = ({ editor, errors }) => {\n  editor.deltaDecorations(\n    [],\n    errors.map((error) => ({\n      range: new monaco.Range(\n        (error.location && error.location.line) || 1,\n        1,\n        (error.location && error.location.line) || 1,\n        // Hardcoded has we don\'t have the endline number\n        Number.MAX_VALUE\n      ),\n      options: {\n        isWholeLine: false,\n        className: lintingErrorMapping[error.severity],\n        marginClassName: "warningIcon",\n        hoverMessage: {\n          value: `[${error.severity}] ${error.title} - ${error.detail} - ${error.description}`,\n        },\n      },\n    }))\n  );\n};\n')),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"hoverMessage")," attribute is used to display the linting error detail to the user on hover."),(0,i.kt)("div",{className:"image-wrapper"},(0,i.kt)(s.ImageWrapper,{src:(0,o.Z)("img/consoleme/hover.png"),width:"100%",alt:"Hover decoration message",mdxType:"ImageWrapper"}),(0,i.kt)("em",null,"Hover decoration message")),(0,i.kt)("h2",{id:"final-result"},"Final result"),(0,i.kt)("p",null,"Here is the final result that identifies ",(0,i.kt)("strong",{parentName:"p"},"bad IAM policy patterns")," in the editor.",(0,i.kt)("br",{parentName:"p"}),"\n","Every time we update the policy document, a ",(0,i.kt)("strong",{parentName:"p"},"timeout")," is triggered and when it ends, the linting error ",(0,i.kt)("strong",{parentName:"p"},"fetch")," is made and the errors are ",(0,i.kt)("strong",{parentName:"p"},"highlighted")," in the editor."),(0,i.kt)("div",{className:"image-wrapper"},(0,i.kt)(s.ImageWrapper,{src:(0,o.Z)("img/consoleme/final.gif"),width:"90%",alt:"Final result",mdxType:"ImageWrapper"})),(0,i.kt)("h2",{id:"takeaway"},"Takeaway"),(0,i.kt)("h3",{id:"problems-encountered"},"Problems encountered"),(0,i.kt)("p",null,"Setting up the project was a bit tedious and asked me to set up some things on my AWS account to be able to test behaviors locally.",(0,i.kt)("br",{parentName:"p"}),"\n","I also had to modify the versions I had a few times, so it took me a little longer than expected."),(0,i.kt)("h3",{id:"what-did-i-learn-"},"What did I learn ?"),(0,i.kt)("p",null,"This contribution allowed me to learn more about ",(0,i.kt)("strong",{parentName:"p"},"IAM Policies")," and its usage in a concrete use case.",(0,i.kt)("br",{parentName:"p"}),"\n","In addition, the architecture of the project was interesting and challenged me to set up my development environment and test the platform."))}g.isMDXComponent=!0},6395:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return d},metadata:function(){return p},toc:function(){return m},Merged:function(){return u},ImageWrapper:function(){return h},Open:function(){return g},Status:function(){return k},default:function(){return v}});var a=n(3117),r=n(102),i=n(7294),o=n(3905),s=n(2879),l=["components"],c={},d=void 0,p={unversionedId:"utils",id:"utils",isDocsHomePage:!1,title:"utils",description:"<svg",source:"@site/docs/utils.md",sourceDirName:".",slug:"/utils",permalink:"/docs/utils",editUrl:"https://github.com/ayshiff/my-open-source-journey/docs/utils.md",tags:[],version:"current",frontMatter:{}},m=[],u=function(e){var t=e.date;return(0,o.kt)("div",null,(0,o.kt)("div",{className:"merged"},(0,o.kt)("span",null,(0,o.kt)("svg",{height:"16",viewBox:"0 0 16 16",version:"1.1",width:"16",fill:"white","aria-hidden":"true",className:"status_svg"},(0,o.kt)("path",{fillRule:"evenodd",d:"M5 3.254V3.25v.005a.75.75 0 110-.005v.004zm.45 1.9a2.25 2.25 0 10-1.95.218v5.256a2.25 2.25 0 101.5 0V7.123A5.735 5.735 0 009.25 9h1.378a2.251 2.251 0 100-1.5H9.25a4.25 4.25 0 01-3.8-2.346zM12.75 9a.75.75 0 100-1.5.75.75 0 000 1.5zm-8.5 4.5a.75.75 0 100-1.5.75.75 0 000 1.5z"})),"Merged")),t||null)},h=function(e){var t=e.src,n=e.alt,a=e.width,r=i.useState(!1),l=r[0],c=r[1];return(0,o.kt)("div",null,(0,o.kt)("div",{className:"image-zoom",onClick:function(){return c(!0)}},(0,o.kt)("img",{src:t,alt:n,width:a})),l&&(0,o.kt)(s.Z,{mainSrc:t,onCloseRequest:function(){return c(!1)},mdxType:"Lightbox"}))},g=function(e){var t=e.date;return(0,o.kt)("div",null,(0,o.kt)("div",{className:"open"},(0,o.kt)("span",null,(0,o.kt)("svg",{height:"16",viewBox:"0 0 16 16",version:"1.1",width:"16",fill:"white","aria-hidden":"true",className:"status_svg"},(0,o.kt)("path",{fillRule:"evenodd",d:"M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z"})),"Open")),t||null)},k=function(e){var t=e.url,n=i.useState(null),a=n[0],r=n[1];return i.useEffect((function(){var e=!0;return fetch(t).then((function(e){return e.json()})).then((function(t){e&&r(t.merged)})),function(){e=!1}}),[]),null===a?(0,o.kt)("div",null):!0===a?(0,o.kt)(u,{mdxType:"Merged"}):(0,o.kt)(g,{mdxType:"Open"})},f={toc:m,Merged:u,ImageWrapper:h,Open:g,Status:k};function v(e){var t=e.components,n=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}))}v.isMDXComponent=!0}}]);