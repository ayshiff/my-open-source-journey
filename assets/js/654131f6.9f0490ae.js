"use strict";(self.webpackChunkthe_open_source_with_remi=self.webpackChunkthe_open_source_with_remi||[]).push([[477],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=u(r),f=o,m=d["".concat(l,".").concat(f)]||d[f]||p[f]||a;return r?n.createElement(m,i(i({ref:t},s),{},{components:r})):n.createElement(m,i({ref:t},s))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[d]="string"==typeof e?e:o,i[1]=c;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},9678:function(e,t,r){r.r(t),r.d(t,{Highlight:function(){return s},assets:function(){return u},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return d}});var n=r(3117),o=(r(7294),r(3905)),a=r(4996);const i={id:"driftctl",title:"CloudSkiff - driftctl"},c=void 0,l={unversionedId:"projects/driftctl",id:"projects/driftctl",title:"CloudSkiff - driftctl",description:"AWS",source:"@site/docs/projects/driftctl.md",sourceDirName:"projects",slug:"/projects/driftctl",permalink:"/docs/projects/driftctl",draft:!1,editUrl:"https://github.com/ayshiff/my-open-source-journey/docs/projects/driftctl.md",tags:[],version:"current",frontMatter:{id:"driftctl",title:"CloudSkiff - driftctl"},sidebar:"docs",previous:{title:"AbstractMachinesLab - Caramel",permalink:"/docs/projects/caramel"},next:{title:"Google - Flutter",permalink:"/docs/projects/flutter"}},u={},s=e=>{let{children:t,color:r}=e;return(0,o.kt)("span",{style:{backgroundColor:r,borderRadius:"2px",color:"#fff",padding:"0.2rem",fontWeight:600}},t)},d=[{value:"Project description",id:"project-description",level:2},{value:"Related contributions",id:"related-contributions",level:3}],p={Highlight:s,toc:d};function f(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("div",{className:"marginBottom"},(0,o.kt)("span",{className:"badge badge--secondary marginRight"},"AWS"),(0,o.kt)("span",{className:"badge badge--secondary marginRight"},"Terraform"),(0,o.kt)("span",{className:"badge badge--secondary marginRight"},"Infrastructure-drift"),(0,o.kt)("span",{className:"badge badge--secondary marginRight"},"Golang")),(0,o.kt)("h2",{id:"project-description"},"Project description"),(0,o.kt)("div",{className:"image-wrapper"},(0,o.kt)("img",{alt:"Firefox iOS presentation",src:(0,a.Z)("img/driftctl/logo.png"),width:"80%"})),(0,o.kt)("br",null),(0,o.kt)("p",null,"driftctl is an Open Source CLI that will warn of infrastructure drifts.    "),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"We track coverage for unit tests, why not infrastructure as code coverage?")," - driftctl"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"What can do driftctl?"))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Scan cloud provider and map resources with IaC code"),(0,o.kt)("li",{parentName:"ul"},"Analyze diffs, and warn about drift and unwanted unmanaged resources"),(0,o.kt)("li",{parentName:"ul"},"Schedule checks (CI/CD)")),(0,o.kt)("p",null,"Here is an example output of the ",(0,o.kt)("inlineCode",{parentName:"p"},"scan")," command which reads a Terraform input and compare it with the current profile infrastructure."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"Found missing resources:\n  aws_s3_bucket:\n    - driftctl-bucket-test-2\nFound resources not covered by IaC:\n  aws_s3_bucket:\n    - driftctl-bucket-test-3\nFound changed resources:\n  - driftctl-bucket-test-1 (aws_s3_bucket):\n    ~ Versioning.0.Enabled: false => true\nFound 3 resource(s)\n - 33% coverage\n - 1 covered by IaC\n - 1 not covered by IaC\n - 1 missing on cloud provider\n - 1/1 changed outside of IaC\n")),(0,o.kt)("p",null,"For more information about driftctl you can find it ",(0,o.kt)("a",{href:"https://driftctl.com/"},(0,o.kt)(s,{color:"#203666",mdxType:"Highlight"},"here")),"."),(0,o.kt)("h3",{id:"related-contributions"},"Related contributions"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{href:"/docs/contributions/driftctl458"},(0,o.kt)(s,{color:"#203666",mdxType:"Highlight"},"11. driftctl - Support for Terraform Cloud")))))}f.isMDXComponent=!0}}]);