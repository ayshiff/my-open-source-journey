"use strict";(self.webpackChunkthe_open_source_with_remi=self.webpackChunkthe_open_source_with_remi||[]).push([[710,364],{8808:function(e,t,r){r.r(t),r.d(t,{Highlight:function(){return d},assets:function(){return p},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return c}});var n=r(3117),a=(r(7294),r(3905)),i=r(4996),o=r(6395);const l={id:"flutter",title:"Google - Flutter contributions",sidebar_label:"13. Google - Flutter contributions"},s=void 0,u={unversionedId:"contributions/flutter",id:"contributions/flutter",title:"Google - Flutter contributions",description:"June-July 2021",source:"@site/docs/contributions/flutter.md",sourceDirName:"contributions",slug:"/contributions/flutter",permalink:"/docs/contributions/flutter",draft:!1,editUrl:"https://github.com/ayshiff/my-open-source-journey/docs/contributions/flutter.md",tags:[],version:"current",frontMatter:{id:"flutter",title:"Google - Flutter contributions",sidebar_label:"13. Google - Flutter contributions"},sidebar:"docs",previous:{title:"12. Backstage - Techdocs End-to-End testing",permalink:"/docs/contributions/backstage5675"},next:{title:"Spotify - Backstage",permalink:"/docs/projects/backstage"}},p={},d=e=>{let{children:t,color:r}=e;return(0,a.kt)("span",{style:{backgroundColor:r,borderRadius:"2px",color:"#fff",padding:"0.2rem",fontWeight:600}},t)},c=[{value:"Introduction",id:"introduction",level:2},{value:"Project",id:"project",level:3},{value:"Flutter/Cupertino - Date order parameter",id:"fluttercupertino---date-order-parameter",level:2},{value:"Context",id:"context",level:3},{value:"Current behavior",id:"current-behavior",level:3},{value:"Implement the solution",id:"implement-the-solution",level:3},{value:"Final result",id:"final-result",level:2},{value:"Flutter - Check for Android device battery level",id:"flutter---check-for-android-device-battery-level",level:2},{value:"Context",id:"context-1",level:3},{value:"Current behavior",id:"current-behavior-1",level:3},{value:"Implement the solution",id:"implement-the-solution-1",level:3},{value:"Final result",id:"final-result-1",level:2},{value:"Flutter/Cocoon - Config keyHelper reference",id:"fluttercocoon---config-keyhelper-reference",level:2},{value:"Context",id:"context-2",level:3},{value:"Current behavior",id:"current-behavior-2",level:3},{value:"Implement the solution",id:"implement-the-solution-2",level:3},{value:"Final result",id:"final-result-2",level:2},{value:"Dart-lang - printOnFailure check current invoker",id:"dart-lang---printonfailure-check-current-invoker",level:2},{value:"Context",id:"context-3",level:3},{value:"Current behavior",id:"current-behavior-3",level:3},{value:"Implement the solution",id:"implement-the-solution-3",level:3},{value:"Final result",id:"final-result-3",level:2},{value:"Codemirror.dart - Add SearchCursor wrapper",id:"codemirrordart---add-searchcursor-wrapper",level:2},{value:"Context",id:"context-4",level:3},{value:"Current behavior",id:"current-behavior-4",level:3},{value:"Implement the solution",id:"implement-the-solution-4",level:3},{value:"Final result",id:"final-result-4",level:2},{value:"Flutter/Gallery - Refactor web benchmarks Move to appropriate folder",id:"fluttergallery---refactor-web-benchmarks-move-to-appropriate-folder",level:2},{value:"Context",id:"context-5",level:3},{value:"Current behavior",id:"current-behavior-5",level:3},{value:"Implement the solution",id:"implement-the-solution-5",level:3},{value:"Final result",id:"final-result-5",level:2},{value:"Flutter/Gallery - Back button overlapping",id:"fluttergallery---back-button-overlapping",level:2},{value:"Current behavior",id:"current-behavior-6",level:3},{value:"Implement the solution",id:"implement-the-solution-6",level:3},{value:"Final result",id:"final-result-6",level:2},{value:"Flutter - CPU/GPU/memory metrics for iOS gallery transition tests",id:"flutter---cpugpumemory-metrics-for-ios-gallery-transition-tests",level:2},{value:"Context",id:"context-6",level:3},{value:"Current behavior",id:"current-behavior-7",level:3},{value:"Implement the solution",id:"implement-the-solution-7",level:3},{value:"Final result",id:"final-result-7",level:2},{value:"Takeaway",id:"takeaway",level:2},{value:"Problems encountered",id:"problems-encountered",level:3},{value:"What did I learn ?",id:"what-did-i-learn-",level:3}],m={Highlight:d,toc:c};function h(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",{className:"post_date"},"June-July 2021"),(0,a.kt)("div",{className:"pr_infos"},(0,a.kt)("div",{className:"marginBottom"},(0,a.kt)("span",{className:"badge badge--secondary marginRight"},"Mobile"),(0,a.kt)("span",{className:"badge badge--secondary marginRight"},"Dart"),(0,a.kt)("span",{className:"badge badge--secondary marginRight"},"Android-iOS"),(0,a.kt)("span",{className:"badge badge--secondary marginRight"},"macOS-Windows"),(0,a.kt)("span",{className:"badge badge--secondary marginRight"},"Web"))),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("div",{className:"image-wrapper"},(0,a.kt)(o.ImageWrapper,{src:(0,i.Z)("img/flutter/cover.jpg"),width:"100%",alt:"Flutter presentation",mdxType:"ImageWrapper"}),(0,a.kt)("em",null,"Flutter presentation")),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"It\u2019s been 5 months since I have launched this Open Source initiative and I learned a lot from it.")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Today it\u2019s time for something new\u2026")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"I found that the format of one contribution every two weeks allowed me to see a wide variety of different projects but does not allow me to fully dive into the project.")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"I have decided to challenge myself and change the format for the next contributions to focus more in-depth for a few weeks on a specific project (a bit like what Google Summer of Code does) which will allow me to better understand how the project works and to be able to make more significant contributions.")),(0,a.kt)("p",null,"This article is composed of ",(0,a.kt)("strong",{parentName:"p"},"eight contributions")," to various projects in the Flutter-Dartlang ecosystem:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)(o.Merged,{mdxType:"Merged"})," Flutter/Cupertino - Date order parameter ",(0,a.kt)("a",{href:"#fluttercupertino---date-order-parameter"},(0,a.kt)(d,{color:"#203666",mdxType:"Highlight"},"link"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)(o.Open,{mdxType:"Open"})," Flutter - Check for Android device battery level ",(0,a.kt)("a",{href:"#flutter---check-for-android-device-battery-level"},(0,a.kt)(d,{color:"#203666",mdxType:"Highlight"},"link"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)(o.Merged,{mdxType:"Merged"})," Flutter/Cocoon - Config keyHelper reference ",(0,a.kt)("a",{href:"#fluttercocoon---config-keyhelper-reference"},(0,a.kt)(d,{color:"#203666",mdxType:"Highlight"},"link"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)(o.Merged,{mdxType:"Merged"})," Dart-lang - `printOnFailure` check current invoker ",(0,a.kt)("a",{href:"#dart-lang---printonfailure-check-current-invoker"},(0,a.kt)(d,{color:"#203666",mdxType:"Highlight"},"link"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)(o.Merged,{mdxType:"Merged"})," Codemirror.dart - Add SearchCursor wrapper ",(0,a.kt)("a",{href:"#codemirrordart---add-searchcursor-wrapper"},(0,a.kt)(d,{color:"#203666",mdxType:"Highlight"},"link"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)(o.Merged,{mdxType:"Merged"})," Flutter/Gallery - Refactor [web benchmarks] Move to appropriate folder ",(0,a.kt)("a",{href:"#fluttergallery---refactor-web-benchmarks-move-to-appropriate-folder"},(0,a.kt)(d,{color:"#203666",mdxType:"Highlight"},"link"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)(o.Merged,{mdxType:"Merged"})," Flutter/Gallery - Back button overlapping ",(0,a.kt)("a",{href:"#fluttergallery---back-button-overlapping"},(0,a.kt)(d,{color:"#203666",mdxType:"Highlight"},"link"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)(o.Merged,{mdxType:"Merged"})," Flutter - CPU/GPU/memory metrics for iOS gallery transition tests ",(0,a.kt)("a",{href:"#flutter---cpugpumemory-metrics-for-ios-gallery-transition-tests"},(0,a.kt)(d,{color:"#203666",mdxType:"Highlight"},"link")))),(0,a.kt)("h3",{id:"project"},"Project"),(0,a.kt)("p",null,"You can find the ",(0,a.kt)("strong",{parentName:"p"},"Flutter project presentation")," ",(0,a.kt)("a",{href:"/docs/projects/flutter"},(0,a.kt)(d,{color:"#203666",mdxType:"Highlight"},"here")),"."),(0,a.kt)("h2",{id:"fluttercupertino---date-order-parameter"},"Flutter/Cupertino - Date order parameter"),(0,a.kt)("admonition",{title:"Contribution link",type:"info"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/flutter/flutter/pull/84599"},"https://github.com/flutter/flutter/pull/84599"),"  ")),(0,a.kt)("admonition",{title:"Contribution Types",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"This contribution is a new ",(0,a.kt)("strong",{parentName:"p"},"feature"),".")),(0,a.kt)("h3",{id:"context"},"Context"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},(0,a.kt)("strong",{parentName:"em"},"Cupertino")," (iOS-style) widgets are Beautiful and high-fidelity widgets for current iOS design language.")),(0,a.kt)("div",{className:"image-wrapper"},(0,a.kt)(o.ImageWrapper,{src:(0,i.Z)("img/flutter/cupertino.png"),width:"100%",alt:"Flutter Cupertino",mdxType:"ImageWrapper"}),(0,a.kt)("em",null,"Flutter Cupertino"),(0,a.kt)("br",null)),(0,a.kt)("h3",{id:"current-behavior"},"Current behavior"),(0,a.kt)("p",null,"This contribution adds a new ",(0,a.kt)("inlineCode",{parentName:"p"},"dateOrder")," parameter to ",(0,a.kt)("inlineCode",{parentName:"p"},"CupertinoDatePicker")," to define the order of the columns in date mode which overrides the default order value defined by ",(0,a.kt)("inlineCode",{parentName:"p"},"localizations.datePickerDateOrder"),"."),(0,a.kt)("div",{className:"image-wrapper"},(0,a.kt)(o.ImageWrapper,{src:(0,i.Z)("img/flutter/cupertino-date-order-before.png"),width:"300px",alt:"CupertinoDatePicker date order (before)",mdxType:"ImageWrapper"}),(0,a.kt)("em",null,"CupertinoDatePicker default date order")),(0,a.kt)("br",null),(0,a.kt)("admonition",{title:"Issue links",type:"note"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/flutter/flutter/issues/84550"},"https://github.com/flutter/flutter/issues/84550"))),(0,a.kt)("h3",{id:"implement-the-solution"},"Implement the solution"),(0,a.kt)("p",null,"Define a new ",(0,a.kt)("inlineCode",{parentName:"p"},"dateOrder")," parameter which determines the order of the columns.",(0,a.kt)("br",{parentName:"p"}),"\n","This parameter can have multiple values defined in ",(0,a.kt)("inlineCode",{parentName:"p"},"DatePickerDateOrder enum")," (",(0,a.kt)("a",{href:"https://api.flutter.dev/flutter/cupertino/DatePickerDateOrder-class.html"},(0,a.kt)(d,{color:"#203666",mdxType:"Highlight"},"link")),")."),(0,a.kt)("p",null,"For example, ",(0,a.kt)("inlineCode",{parentName:"p"},"dmy")," corresponds from left to right to day, month, year."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"/// Determines the order of the columns inside [CupertinoDatePicker] in date mode.\n/// Defaults to the locale's default date format/order.\nfinal DatePickerDateOrder? dateOrder;\n")),(0,a.kt)("p",null,"If the ",(0,a.kt)("inlineCode",{parentName:"p"},"dateOrder")," property is not defined, the order is based on internationalization."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"final DatePickerDateOrder datePickerDateOrder =\n    dateOrder ?? localizations.datePickerDateOrder;\n\nswitch (datePickerDateOrder) {\n  /// ...\n}\n")),(0,a.kt)("p",null,"Add some ",(0,a.kt)("strong",{parentName:"p"},"tests")," to be sure that everything is working as expected."),(0,a.kt)("p",null,"We check that with the ",(0,a.kt)("inlineCode",{parentName:"p"},"DatePickerDateOrder.ydm")," value (Year/Day/Month), the component render the elements in the right order from left to right."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart",metastring:'title="packages/flutter/test/cupertino/date_picker_test.dart"',title:'"packages/flutter/test/cupertino/date_picker_test.dart"'},"    testWidgets('DatePicker displays the date in correct order', (WidgetTester tester) async {\n      await tester.pumpWidget(\n        CupertinoApp(\n          home: Center(\n            child: SizedBox(\n              height: 400.0,\n              width: 400.0,\n              child: CupertinoDatePicker(\n                dateOrder: DatePickerDateOrder.ydm,\n                mode: CupertinoDatePickerMode.date,\n                onDateTimeChanged: (DateTime newDate) {},\n                initialDateTime: DateTime(2018, 1, 14, 10, 30),\n              ),\n            ),\n          ),\n        ),\n      );\n\n      expect(\n        tester.getTopLeft(find.text('2018')).dx,\n        lessThan(tester.getTopLeft(find.text('14')).dx),\n      );\n\n      expect(\n        tester.getTopLeft(find.text('14')).dx,\n        lessThan(tester.getTopLeft(find.text('January')).dx),\n      );\n    });\n")),(0,a.kt)("h2",{id:"final-result"},"Final result"),(0,a.kt)("p",null,"Users can now override the default CupertinoDatePicker date order."),(0,a.kt)("div",{className:"image-wrapper"},(0,a.kt)(o.ImageWrapper,{src:(0,i.Z)("img/flutter/cupertino-date-order-final.png"),width:"300px",alt:"CupertinoDatePicker date order",mdxType:"ImageWrapper"}),(0,a.kt)("em",null,"CupertinoDatePicker date order")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"flutter---check-for-android-device-battery-level"},"Flutter - Check for Android device battery level"),(0,a.kt)("admonition",{title:"Contribution link",type:"info"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/flutter/flutter/pull/84534"},"https://github.com/flutter/flutter/pull/84534"))),(0,a.kt)("admonition",{title:"Contribution Types",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"This contribution is a new ",(0,a.kt)("strong",{parentName:"p"},"feature"),".")),(0,a.kt)("h3",{id:"context-1"},"Context"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},(0,a.kt)("strong",{parentName:"em"},"DeviceLab")," is a physical lab that tests Flutter on real devices.")),(0,a.kt)("h3",{id:"current-behavior-1"},"Current behavior"),(0,a.kt)("p",null,"This contribution will filter out and warn about Android devices with ",(0,a.kt)("strong",{parentName:"p"},"low battery level")," (smaller than or equal to 15%)."),(0,a.kt)("h3",{id:"implement-the-solution-1"},"Implement the solution"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Get the battery level")," of an Android device with ",(0,a.kt)("inlineCode",{parentName:"p"},"adb shell dumpsys battery"),"."),(0,a.kt)("p",null,"It should output something like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Current Battery Service state:\n  AC powered: false\n  USB powered: true\n  Wireless powered: false\n  Max charging current: 0\n  Max charging voltage: 0\n  Charge counter: 0\n  status: 2\n  health: 2\n  present: true\n  level: 93\n  scale: 100\n  voltage: 4245\n  temperature: 237\n  technology: Li-ion\n")),(0,a.kt)("p",null,"We can ",(0,a.kt)("strong",{parentName:"p"},"grab the level property")," as this is what we are interested in."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"Future<int> _getBatteryLevel() async {\n  final String batteryInfo = await shellEval('dumpsys', <String>['battery']);\n  final String batteryLevel = grep('level:', from: batteryInfo).single.split(':')[1].trim();\n  return int.parse(batteryLevel);\n}\n")),(0,a.kt)("p",null,"Define a function to check if the battery level is ",(0,a.kt)("strong",{parentName:"p"},"less than 15%"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"/// Whether the device has a battery level smaller than or equal to 15 percent.\n@override\nFuture<bool> hasLowBatteryLevel() async {\n  return await _getBatteryLevel() <= 15;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Check")," all Android devices battery level and ",(0,a.kt)("strong",{parentName:"p"},"warn")," about those with low battery level."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"final AndroidDevice device = allDevices[math.Random().nextInt(allDevices.length)];\nfinal bool hasLowBatteryLevel = await device.hasLowBatteryLevel();\nif (!hasLowBatteryLevel) {\n  _workingDevice = device;\n}\n\nfor (final AndroidDevice device in allDevices) {\n  final String deviceId = device.deviceId;\n  if (await device.hasLowBatteryLevel()) {\n    print('Device with ID $deviceId has low battery level');\n  }\n}\n")),(0,a.kt)("p",null,"Add tests to check that our new functions ",(0,a.kt)("inlineCode",{parentName:"p"},"hasLowBatteryLevel")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"_getBatteryLevel")," are working as expected."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"group('batteryLevel', () {\n  test('has enough battery', () async {\n    FakeDevice.pretendHasEnoughBattery();\n    expect(await device.hasLowBatteryLevel(), isFalse);\n  });\n\n  test('has not enough battery', () async {\n    FakeDevice.pretendHasNotEnoughBattery();\n    expect(await device.hasLowBatteryLevel(), isTrue);\n  });\n});\n\nstatic void pretendHasNotEnoughBattery() {\n  output = '''\n    level: 15\n  ''';\n}\n\nstatic void pretendHasEnoughBattery() {\n  output = '''\n    level: 20\n  ''';\n}\n")),(0,a.kt)("h2",{id:"final-result-1"},"Final result"),(0,a.kt)("p",null,"This contribution added a way to warn about Android devices with ",(0,a.kt)("strong",{parentName:"p"},"low battery level")," in DeviceLab."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"fluttercocoon---config-keyhelper-reference"},"Flutter/Cocoon - Config keyHelper reference"),(0,a.kt)("admonition",{title:"Contribution link",type:"info"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/flutter/cocoon/pull/1233"},"https://github.com/flutter/cocoon/pull/1233"))),(0,a.kt)("admonition",{title:"Contribution Types",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"This contribution is about ",(0,a.kt)("strong",{parentName:"p"},"refactoring"),".")),(0,a.kt)("h3",{id:"context-2"},"Context"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},(0,a.kt)("strong",{parentName:"em"},"Cocoon")," is a Dart App Engine custom runtime (backend) with a frontend of Flutter apps (build and repository dashboard). Cocoon coordinates and aggregates the results of flutter/flutter builds.")),(0,a.kt)("h3",{id:"current-behavior-2"},"Current behavior"),(0,a.kt)("p",null,"A keyHelper reference has been added in cocoon config."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"KeyHelper get keyHelper =>\n    KeyHelper(applicationContext: context.applicationContext);\n")),(0,a.kt)("p",null,"Existing APIs have separate keyHelper definitions in their own scope.\nTo make it consistent, we should update all APIs to use the keyHelper defined in the cocoon config."),(0,a.kt)("admonition",{title:"Issue links",type:"note"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/flutter/flutter/issues/48987"},"https://github.com/flutter/flutter/issues/48987"))),(0,a.kt)("h3",{id:"implement-the-solution-2"},"Implement the solution"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"Before"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart",metastring:'title="app_dart/lib/src/request_handlers/reset_prod_task.dart"',title:'"app_dart/lib/src/request_handlers/reset_prod_task.dart"'},"final ClientContext clientContext = authContext.clientContext;\nfinal KeyHelper keyHelper = KeyHelper(applicationContext: clientContext.applicationContext);\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"After"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart",metastring:'title="app_dart/lib/src/request_handlers/reset_prod_task.dart"',title:'"app_dart/lib/src/request_handlers/reset_prod_task.dart"'},"final KeyHelper keyHelper = config.keyHelper;\n")),(0,a.kt)("p",null,"Add some tests and mock the key helper."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"setUp(() {\n  /// Other\n  keyHelper = FakeKeyHelper(applicationContext: clientContext.applicationContext);\n  config = FakeConfig(dbValue: datastoreDB, keyHelperValue: keyHelper);\n});\n")),(0,a.kt)("h2",{id:"final-result-2"},"Final result"),(0,a.kt)("p",null,"Made the codebase more sustainable and maintainable by refactoring a part of the codebase that was not relevant anymore."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"dart-lang---printonfailure-check-current-invoker"},"Dart-lang - printOnFailure check current invoker"),(0,a.kt)("admonition",{title:"Contribution link",type:"info"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/dart-lang/test/pull/1533"},"https://github.com/dart-lang/test/pull/1533"))),(0,a.kt)("admonition",{title:"Contribution Types",type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"This contribution is a ",(0,a.kt)("strong",{parentName:"p"},"bug-fix"),".")),(0,a.kt)("h3",{id:"context-3"},"Context"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},(0,a.kt)("strong",{parentName:"em"},"Dart-lang tests")," provides a standard way of writing and running tests in Dart.")),(0,a.kt)("h3",{id:"current-behavior-3"},"Current behavior"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"printOnFailure")," function is used to print errors in the console when an error occurs.",(0,a.kt)("br",{parentName:"p"}),"\n","If you call it outside the test zone, the error is pretty confusing."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"The method 'printOnFailure' was called on null.\n Receiver: null\n Tried calling: printOnFailure(<your-message>)\n")),(0,a.kt)("p",null,"We should explicitly check and throw if there is no current invoker."),(0,a.kt)("admonition",{title:"Issue links",type:"note"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/dart-lang/test/issues/1340"},"https://github.com/dart-lang/test/issues/1340"))),(0,a.kt)("h3",{id:"implement-the-solution-3"},"Implement the solution"),(0,a.kt)("p",null,"This contribution adds a check within ",(0,a.kt)("inlineCode",{parentName:"p"},"printOnFailure")," and throw an exception if there is no current invoker."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"Before"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"void printOnFailure(String message) => Invoker.current!.printOnFailure(message);\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"After"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"void printOnFailure(String message) {\n  var invoker = Invoker.current;\n  if (invoker == null) {\n    throw StateError(\n        'There is no current invoker. Please make sure that you are making the '\n        'call inside a test zone.');\n  }\n  return invoker.printOnFailure(message);\n}\n")),(0,a.kt)("h2",{id:"final-result-3"},"Final result"),(0,a.kt)("p",null,"Made the codebase more consistent by avoiding some issues and improving the developer experience."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"codemirrordart---add-searchcursor-wrapper"},"Codemirror.dart - Add SearchCursor wrapper"),(0,a.kt)("admonition",{title:"Contribution link",type:"info"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/google/codemirror.dart/pull/138"},"https://github.com/google/codemirror.dart/pull/138"))),(0,a.kt)("admonition",{title:"Contribution Types",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"This contribution is a new ",(0,a.kt)("strong",{parentName:"p"},"feature"),".")),(0,a.kt)("h3",{id:"context-4"},"Context"),(0,a.kt)("p",null,"A Dart wrapper around the CodeMirror text editor."),(0,a.kt)("p",null,"From codemirror.net:"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},(0,a.kt)("strong",{parentName:"em"},"CodeMirror")," is a versatile text editor implemented in JavaScript for the browser. It is specialized for editing code, and comes with a number of language modes and add-ons that implement more advanced editing functionality.")),(0,a.kt)("h3",{id:"current-behavior-4"},"Current behavior"),(0,a.kt)("p",null,"The wrapper didn't have a way to use the ",(0,a.kt)("strong",{parentName:"p"},"search cursor add-on")," which can be used to implement search/replace functionality.",(0,a.kt)("br",{parentName:"p"}),"\n","This wrapper will be used for ",(0,a.kt)("a",{href:"https://github.com/dart-lang/dart-pad/issues/1866"},(0,a.kt)(d,{color:"#203666",mdxType:"Highlight"},"dart-lang/dart-pad#1866")),"."),(0,a.kt)("h3",{id:"implement-the-solution-4"},"Implement the solution"),(0,a.kt)("p",null,"Add the add-on wrapper with all its methods."),(0,a.kt)("p",null,"The main method is ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"getSearchCursor(query, start, options) \u2192 cursor"))," which returns a search cursor with the following methods:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"findNext() - findPrevious()")," \u2192 boolean",(0,a.kt)("br",{parentName:"li"}),(0,a.kt)("em",{parentName:"li"},"Search forward or backward from the current position.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"from() - to()")," \u2192 {line, ch}",(0,a.kt)("br",{parentName:"li"}),(0,a.kt)("em",{parentName:"li"},"Return {line, ch} objects pointing at the start and end of the match.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"replace(text: string, ?origin: string)"),(0,a.kt)("br",{parentName:"li"}),(0,a.kt)("em",{parentName:"li"},"Replaces the currently found match with the given text and adjusts the cursor position to reflect the replacement."))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"// Copyright (c) 2021, Google Inc. Please see the AUTHORS file for details.\n// All rights reserved. Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n/// A wrapper around the `add-on/search/searchcursor.js` add-on.\nlibrary codemirror.searchcursor;\n\nimport 'dart:js';\n\nimport 'src/js_utils.dart';\nimport 'codemirror.dart';\n\nclass SearchCursor {\n  /// Retrieve the search cursor from the editor instance.\n  static SearchCursorContainer getSearchCursor(CodeMirror editor, String value,\n      {Position? start, Map? options}) {\n    if (options == null) {\n      return SearchCursorContainer._(\n          editor.callArgs('getSearchCursor', [value, start]));\n    } else {\n      return SearchCursorContainer._(\n          editor.callArgs('getSearchCursor', [value, start, jsify(options)]));\n    }\n  }\n}\n\nclass SearchCursorContainer extends ProxyHolder {\n  SearchCursorContainer._(JsObject? jsProxy) : super(jsProxy);\n\n  bool get atOccurrence => jsProxy!['atOccurrence'];\n  Doc get doc => Doc.fromProxy(jsProxy!['doc']);\n  Position get pos => Position.fromProxy(jsProxy!['pos']);\n\n  /// Search forward from the current position\n  bool findNext() => call('findNext');\n\n  /// Search backward from the current position\n  bool findPrevious() => call('findPrevious');\n  Position from() => Position.fromProxy(call('from'));\n  Position to() => Position.fromProxy(call('to'));\n  String replace(String text, {dynamic origin}) {\n    if (origin == null) {\n      return callArg('replace', text);\n    } else {\n      return callArgs('replace', [text, origin]);\n    }\n  }\n}\n")),(0,a.kt)("p",null,"Add tests to check that every method of the add-on is working properly.",(0,a.kt)("br",{parentName:"p"}),"\n","We are using an html file to attach the Codemirror instance to."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"// Copyright (c) 2014, Google Inc. Please see the AUTHORS file for details.\n// All rights reserved. Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n@TestOn('browser')\nlibrary codemirror.tests;\n\nimport 'dart:html';\n\nimport 'package:codemirror/codemirror.dart';\nimport 'package:test/test.dart';\nimport 'package:codemirror/searchcursor.dart';\n\nvoid main() {\n  group('searchCursor', createSearchCursorTests);\n}\n\nvoid createSearchCursorTests() {\n  late CodeMirror editor;\n\n  setUp(() {\n    editor = CodeMirror.fromTextArea(\n        querySelector('#textContainer') as TextAreaElement?);\n  });\n\n  tearDown(() {\n    editor.dispose();\n  });\n\n  test('getSearchCursor', () {\n    var cursor = SearchCursor.getSearchCursor(editor, 'Lorem');\n    print(cursor.pos);\n    expect(cursor, isNotNull);\n    expect(cursor, isA<SearchCursorContainer>());\n  });\n\n  test('findPrevious / findNext', () {\n    var cursor = SearchCursor.getSearchCursor(editor, 'ipsum');\n    var hasNext = cursor.findNext();\n    expect(hasNext, isTrue);\n\n    cursor.findNext();\n\n    var hasPrev = cursor.findPrevious();\n    expect(hasPrev, isTrue);\n  });\n\n  test('from / to', () {\n    var cursor = SearchCursor.getSearchCursor(editor, 'Pellentesque');\n    cursor.findNext();\n\n    var from = cursor.from();\n    var to = cursor.to();\n    expect(from, isNotNull);\n    expect(to, isNotNull);\n  });\n\n  test('atOccurrence', () {\n    var cursor = SearchCursor.getSearchCursor(editor, 'dolor');\n    cursor.findNext();\n    expect(cursor.atOccurrence, isTrue);\n  });\n\n  test('doc', () {\n    var cursor = SearchCursor.getSearchCursor(editor, 'sapien');\n    expect(cursor.doc, isA<Doc>());\n  });\n\n  test('pos', () {\n    var cursor = SearchCursor.getSearchCursor(editor, 'ipsum');\n    expect(cursor.pos, isA<Position>());\n  });\n}\n")),(0,a.kt)("h2",{id:"final-result-4"},"Final result"),(0,a.kt)("p",null,"The search cursor add-on lets users customize their Codemirror instance to add search-replace functionalities."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"fluttergallery---refactor-web-benchmarks-move-to-appropriate-folder"},"Flutter/Gallery - Refactor ","[web benchmarks]"," Move to appropriate folder"),(0,a.kt)("admonition",{title:"Contribution link",type:"info"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/flutter/gallery/pull/520"},"https://github.com/flutter/gallery/pull/520"))),(0,a.kt)("admonition",{title:"Contribution Types",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"This contribution is about ",(0,a.kt)("strong",{parentName:"p"},"refactoring"),".")),(0,a.kt)("h3",{id:"context-5"},"Context"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},(0,a.kt)("strong",{parentName:"em"},"Flutter Gallery")," is a resource to help developers evaluate and use Flutter. It is a collection of Material Design & Cupertino widgets, behaviors, and vignettes implemented with Flutter.")),(0,a.kt)("h3",{id:"current-behavior-5"},"Current behavior"),(0,a.kt)("p",null,"Moves ",(0,a.kt)("inlineCode",{parentName:"p"},"benchmarks_test.dart")," and the benchmarks sub-folder from the ",(0,a.kt)("inlineCode",{parentName:"p"},"test")," folder to ",(0,a.kt)("inlineCode",{parentName:"p"},"test_benchmarks")," as it is more appropriate."),(0,a.kt)("h3",{id:"implement-the-solution-5"},"Implement the solution"),(0,a.kt)("p",null,"This contribution is mainly about moving files to another directory, nothing special here."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"final taskResult = await serveWebBenchmark(\n  benchmarkAppDirectory: projectRootDirectory(),\n  entryPoint: 'test_benchmarks/benchmarks/client.dart',\n  useCanvasKit: false,\n);\n")),(0,a.kt)("h2",{id:"final-result-5"},"Final result"),(0,a.kt)("p",null,"Made the codebase more easily maintainable by moving the benchmark tests inside a more appropriate directory."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"fluttergallery---back-button-overlapping"},"Flutter/Gallery - Back button overlapping"),(0,a.kt)("admonition",{title:"Contribution link",type:"info"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/flutter/gallery/pull/522"},"https://github.com/flutter/gallery/pull/522"))),(0,a.kt)("admonition",{title:"Contribution Types",type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"This contribution is a ",(0,a.kt)("strong",{parentName:"p"},"bug-fix"),".")),(0,a.kt)("h3",{id:"current-behavior-6"},"Current behavior"),(0,a.kt)("p",null,'Fixes the overlapping "Back" button with the bottom navigation bar problem.'),(0,a.kt)("h3",{id:"implement-the-solution-6"},"Implement the solution"),(0,a.kt)("p",null,"Add a new ",(0,a.kt)("inlineCode",{parentName:"p"},"hasBottomNavBar")," property which define if we should add some bottom padding to the back button."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart",metastring:'title="lib/routes.dart"',title:'"lib/routes.dart"'},"(context, match) =>\n    const StudyWrapper(study: reply.ReplyApp(), hasBottomNavBar: true)),\n")),(0,a.kt)("p",null,"Add a vertical bottom padding if the bottom nav bar is present."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart",metastring:'title="lib/pages/home.dart"',title:'"lib/pages/home.dart"'},"/// ...\npadding: EdgeInsets.symmetric(\n    horizontal: 16.0,\n    vertical: widget.hasBottomNavBar\n        ? kBottomNavigationBarHeight + 16.0\n        : 16.0),\n/// ...\n")),(0,a.kt)("h2",{id:"final-result-6"},"Final result"),(0,a.kt)("p",null,"Improved the User Experience as the back button is no longer overlapping with the bottom nav bar and is more easily accessible."),(0,a.kt)("div",{className:"image-wrapper"},(0,a.kt)(o.ImageWrapper,{src:(0,i.Z)("img/flutter/gallery-nav-bar.jpeg"),width:"80%",alt:"Gallery back button overlapping",mdxType:"ImageWrapper"}),(0,a.kt)("em",null,"Gallery back button overlapping")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"flutter---cpugpumemory-metrics-for-ios-gallery-transition-tests"},"Flutter - CPU/GPU/memory metrics for iOS gallery transition tests"),(0,a.kt)("admonition",{title:"Contribution link",type:"info"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/flutter/flutter/pull/92626"},"https://github.com/flutter/flutter/pull/92626"))),(0,a.kt)("admonition",{title:"Contribution Types",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"This contribution is a new ",(0,a.kt)("strong",{parentName:"p"},"feature"),".")),(0,a.kt)("h3",{id:"context-6"},"Context"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},(0,a.kt)("strong",{parentName:"em"},"DeviceLab")," is a physical lab that tests Flutter on real devices.")),(0,a.kt)("h3",{id:"current-behavior-7"},"Current behavior"),(0,a.kt)("p",null,"This contribution adds missing CPU/GPU/memory metrics for iOS gallery transition tests."),(0,a.kt)("admonition",{title:"Issue links",type:"note"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/flutter/flutter/issues/70438"},"https://github.com/flutter/flutter/issues/70438"))),(0,a.kt)("h3",{id:"implement-the-solution-7"},"Implement the solution"),(0,a.kt)("p",null,"Report the CPU/GPU/memory metrics if the ",(0,a.kt)("inlineCode",{parentName:"p"},"measureCpuGpu")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"measureMemory")," properties are ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," and if the device OS is iOS."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart",metastring:'title="dev/devicelab/lib/tasks/gallery.dart"',title:'"dev/devicelab/lib/tasks/gallery.dart"'},"final bool measureCpuGpu;\nfinal bool measureMemory;\n\nfinal bool isAndroid = deviceOperatingSystem == DeviceOperatingSystem.android;\nif (measureCpuGpu && !isAndroid) ...<String>[\n  // See https://github.com/flutter/flutter/issues/68888\n  if (summary['average_cpu_usage'] != null) 'average_cpu_usage',\n  if (summary['average_gpu_usage'] != null) 'average_gpu_usage',\n],\nif (measureMemory && !isAndroid) ...<String>[\n  // See https://github.com/flutter/flutter/issues/68888\n  if (summary['average_memory_usage'] != null) 'average_memory_usage',\n  if (summary['90th_percentile_memory_usage'] != null) '90th_percentile_memory_usage',\n  if (summary['99th_percentile_memory_usage'] != null) '99th_percentile_memory_usage',\n],\n")),(0,a.kt)("h2",{id:"final-result-7"},"Final result"),(0,a.kt)("p",null,"Added some missing metrics for ",(0,a.kt)("inlineCode",{parentName:"p"},"GalleryTransition")," tests to improve maintainers experience."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"takeaway"},"Takeaway"),(0,a.kt)("h3",{id:"problems-encountered"},"Problems encountered"),(0,a.kt)("p",null,"The code exploration was the part that took me the most time as some projects are pretty big.",(0,a.kt)("br",{parentName:"p"}),"\n","I was also busy with work, school and other things which is why I didn't make as many contributions as I would have liked."),(0,a.kt)("h3",{id:"what-did-i-learn-"},"What did I learn ?"),(0,a.kt)("p",null,"These were my first contributions in Dart that taught me a lot!",(0,a.kt)("br",{parentName:"p"}),"\n","It was also a good experience contributing to the Flutter ecosystem\ud83d\udc99"))}h.isMDXComponent=!0},6395:function(e,t,r){r.r(t),r.d(t,{ImageWrapper:function(){return m},Merged:function(){return c},Open:function(){return h},Status:function(){return k},assets:function(){return p},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return d}});var n=r(3117),a=r(7294),i=r(3905),o=r(2879);const l={},s=void 0,u={unversionedId:"utils",id:"utils",title:"utils",description:"",source:"@site/docs/utils.md",sourceDirName:".",slug:"/utils",permalink:"/docs/utils",draft:!1,editUrl:"https://github.com/ayshiff/my-open-source-journey/docs/utils.md",tags:[],version:"current",frontMatter:{}},p={},d=[],c=e=>{let{date:t}=e;return(0,i.kt)("div",null,(0,i.kt)("div",{className:"merged"},(0,i.kt)("span",null,(0,i.kt)("svg",{height:"16",viewBox:"0 0 16 16",version:"1.1",width:"16",fill:"white","aria-hidden":"true",className:"status_svg"},(0,i.kt)("path",{fillRule:"evenodd",d:"M5 3.254V3.25v.005a.75.75 0 110-.005v.004zm.45 1.9a2.25 2.25 0 10-1.95.218v5.256a2.25 2.25 0 101.5 0V7.123A5.735 5.735 0 009.25 9h1.378a2.251 2.251 0 100-1.5H9.25a4.25 4.25 0 01-3.8-2.346zM12.75 9a.75.75 0 100-1.5.75.75 0 000 1.5zm-8.5 4.5a.75.75 0 100-1.5.75.75 0 000 1.5z"})),"Merged")),t||null)},m=e=>{let{src:t,alt:r,width:n}=e;const[l,s]=a.useState(!1);return(0,i.kt)("div",null,(0,i.kt)("div",{className:"image-zoom",onClick:()=>s(!0)},(0,i.kt)("img",{src:t,alt:r,width:n})),l&&(0,i.kt)(o.Z,{mainSrc:t,onCloseRequest:()=>s(!1),mdxType:"Lightbox"}))},h=e=>{let{date:t}=e;return(0,i.kt)("div",null,(0,i.kt)("div",{className:"open"},(0,i.kt)("span",null,(0,i.kt)("svg",{height:"16",viewBox:"0 0 16 16",version:"1.1",width:"16",fill:"white","aria-hidden":"true",className:"status_svg"},(0,i.kt)("path",{fillRule:"evenodd",d:"M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z"})),"Open")),t||null)},k=e=>{let{url:t}=e;const[r,n]=a.useState(null);return a.useEffect((()=>{let e=!0;return fetch(t).then((e=>e.json())).then((t=>{e&&n(t.merged)})),()=>{e=!1}}),[]),null===r?(0,i.kt)("div",null):!0===r?(0,i.kt)(c,{mdxType:"Merged"}):(0,i.kt)(h,{mdxType:"Open"})},g={toc:d,Merged:c,ImageWrapper:m,Open:h,Status:k};function f(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},g,r,{components:t,mdxType:"MDXLayout"}))}f.isMDXComponent=!0}}]);