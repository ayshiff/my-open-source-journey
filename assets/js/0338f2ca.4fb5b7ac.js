"use strict";(self.webpackChunkthe_open_source_with_remi=self.webpackChunkthe_open_source_with_remi||[]).push([[721,364],{6996:function(e,t,n){n.r(t),n.d(t,{Highlight:function(){return d},assets:function(){return c},contentTitle:function(){return o},default:function(){return k},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var a=n(3117),i=(n(7294),n(3905)),l=n(4996),r=n(6395);const s={id:"backstage4416",title:"Backstage - Splunk On-Call Plugin",sidebar_label:"5. Backstage - Splunk On-Call Plugin"},o=void 0,p={unversionedId:"contributions/backstage4416",id:"contributions/backstage4416",title:"Backstage - Splunk On-Call Plugin",description:"Typescript",source:"@site/docs/contributions/backstage#4416.md",sourceDirName:"contributions",slug:"/contributions/backstage4416",permalink:"/docs/contributions/backstage4416",draft:!1,editUrl:"https://github.com/ayshiff/my-open-source-journey/docs/contributions/backstage#4416.md",tags:[],version:"current",frontMatter:{id:"backstage4416",title:"Backstage - Splunk On-Call Plugin",sidebar_label:"5. Backstage - Splunk On-Call Plugin"},sidebar:"docs",previous:{title:"4. LifeTime - Activity detail",permalink:"/docs/contributions/lifetime28"},next:{title:"6. Octobox - Notifications filter",permalink:"/docs/contributions/octobox2597"}},c={},d=e=>{let{children:t,color:n}=e;return(0,i.kt)("span",{style:{backgroundColor:n,borderRadius:"2px",color:"#fff",padding:"0.2rem",fontWeight:600}},t)},u=[{value:"Introduction",id:"introduction",level:2},{value:"Project",id:"project",level:3},{value:"Context",id:"context",level:3},{value:"What is a Backstage plugin ?",id:"what-is-a-backstage-plugin-",level:4},{value:"What is Splunk On-Call ?",id:"what-is-splunk-on-call-",level:4},{value:"Incident management",id:"incident-management",level:4},{value:"Current behavior",id:"current-behavior",level:3},{value:"Implement the solution",id:"implement-the-solution",level:2},{value:"Create the plugin",id:"create-the-plugin",level:3},{value:"Folder structure",id:"folder-structure",level:4},{value:"Create the plugin Marketplace entry",id:"create-the-plugin-marketplace-entry",level:3},{value:"Create the plugin API",id:"create-the-plugin-api",level:3},{value:"Proxying",id:"proxying",level:4},{value:"The <code>getIncidents</code> example",id:"the-getincidents-example",level:4},{value:"Create the components",id:"create-the-components",level:3},{value:"SplunkOnCallCard",id:"splunkoncallcard",level:4},{value:"Incident list",id:"incident-list",level:4},{value:"Escalation",id:"escalation",level:4},{value:"Trigger Dialog",id:"trigger-dialog",level:4},{value:"Errors",id:"errors",level:4},{value:"Add the tests",id:"add-the-tests",level:3},{value:"Empty incident list",id:"empty-incident-list",level:4},{value:"Valid incident list",id:"valid-incident-list",level:4},{value:"Incidents fetching error",id:"incidents-fetching-error",level:4},{value:"Add changesets",id:"add-changesets",level:3},{value:"Final result",id:"final-result",level:2},{value:"Takeaway",id:"takeaway",level:2},{value:"Problems encountered",id:"problems-encountered",level:3},{value:"What did I learn ?",id:"what-did-i-learn-",level:3}],m={Highlight:d,toc:u};function k(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"pr_infos"},(0,i.kt)("div",{className:"marginBottom"},(0,i.kt)("div",null,(0,i.kt)(r.Merged,{date:"7 Feb 2021",mdxType:"Merged"})),(0,i.kt)("span",{className:"badge badge--secondary marginRight"},"Typescript"),(0,i.kt)("span",{className:"badge badge--secondary marginRight"},"Splunk On-Call"),(0,i.kt)("span",{className:"badge badge--secondary marginRight"},"Plugin"))),(0,i.kt)("admonition",{title:"Contribution link",type:"info"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/backstage/backstage/pull/4416"},"https://github.com/backstage/backstage/pull/4416"))),(0,i.kt)("admonition",{title:"Contribution Type",type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"This contribution is a new ",(0,i.kt)("strong",{parentName:"p"},"feature"),".")),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("div",{className:"image-wrapper"},(0,i.kt)(r.ImageWrapper,{alt:"Contribution presentation",src:(0,l.Z)("img/backstage-splunk-on-call/cover.jpg"),mdxType:"ImageWrapper"}),(0,i.kt)("br",null),(0,i.kt)("em",null,"Backstage + Splunk On-Call Plugin")),(0,i.kt)("h3",{id:"project"},"Project"),(0,i.kt)("p",null,"You can find the ",(0,i.kt)("a",{href:"/docs/projects/backstage"},(0,i.kt)(d,{color:"#203666",mdxType:"Highlight"},"Backstage project presentation here")),"."),(0,i.kt)("h3",{id:"context"},"Context"),(0,i.kt)("p",null,"In order to understand the initial issue you need to have a basic understanding of what a ",(0,i.kt)("strong",{parentName:"p"},"plugin")," is."),(0,i.kt)("h4",{id:"what-is-a-backstage-plugin-"},"What is a Backstage plugin ?"),(0,i.kt)("p",null,"Backstage is an application build on top of a set of plugins.",(0,i.kt)("br",{parentName:"p"}),"\n","A plugin lets you expose any kind of ",(0,i.kt)("strong",{parentName:"p"},"infrastructure")," or ",(0,i.kt)("strong",{parentName:"p"},"software development tool")," in Backstage."),(0,i.kt)("p",null,"This means you can write your own plugins to add ",(0,i.kt)("strong",{parentName:"p"},"new functionalities")," to Backstage."),(0,i.kt)("p",null,"In this case we will implement a plugin to integrate ",(0,i.kt)("a",{href:"https://www.splunk.com/en_us/software/splunk-on-call.html"},(0,i.kt)(d,{color:"#203666",mdxType:"Highlight"},"Splunk On-Call"))," (previously ",(0,i.kt)("strong",{parentName:"p"},"VictorOps"),") functionalities."),(0,i.kt)("h4",{id:"what-is-splunk-on-call-"},"What is Splunk On-Call ?"),(0,i.kt)("p",null,"Do you know ",(0,i.kt)("strong",{parentName:"p"},"what happen")," when your service break down ? Does someone ",(0,i.kt)("strong",{parentName:"p"},"get notified")," ? Can that person ",(0,i.kt)("strong",{parentName:"p"},"fix the problem")," ?",(0,i.kt)("br",{parentName:"p"}),"\n","These questions can occur anytime a service ",(0,i.kt)("strong",{parentName:"p"},"encounters a problem"),"."),(0,i.kt)("p",null,"Splunk On-Call helps you answer these questions by ",(0,i.kt)("strong",{parentName:"p"},"automating incident management"),"."),(0,i.kt)("div",{className:"image-wrapper"},(0,i.kt)(r.ImageWrapper,{alt:"Splunk On-Call",width:"600",src:(0,l.Z)("img/backstage-splunk-on-call/splunk-on-call-dashboard.png"),mdxType:"ImageWrapper"}),(0,i.kt)("br",null),(0,i.kt)("em",null,"Splunk On-Call dashboard")),(0,i.kt)("br",null),(0,i.kt)("p",null,"Before continuing, you need to have a basic familiarity with ",(0,i.kt)("strong",{parentName:"p"},"incident management")," concepts."),(0,i.kt)("h4",{id:"incident-management"},"Incident management"),(0,i.kt)("p",null,"An incident management system apply a logical operation to an Incident.It can determines:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Who should be ",(0,i.kt)("strong",{parentName:"li"},"alerted")," to this particular incident"),(0,i.kt)("li",{parentName:"ul"},"What method of ",(0,i.kt)("strong",{parentName:"li"},"notification")," is used (SMS, email, etc)"),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("strong",{parentName:"li"},"state")," of the incident and execution of ",(0,i.kt)("strong",{parentName:"li"},"secondary workflows"))),(0,i.kt)("p",null,"Here are the \u201cFive Phases\u201d of the Incident Management framework:"),(0,i.kt)("div",{className:"image-wrapper"},(0,i.kt)(r.ImageWrapper,{alt:"Incident management framework",width:"400",src:(0,l.Z)("img/backstage-splunk-on-call/incident-management-framework.png"),mdxType:"ImageWrapper"}),(0,i.kt)("br",null),(0,i.kt)("em",null,"Incident management framework")),(0,i.kt)("p",null,"You can learn more about Effective DevOps Incident Management Teams ",(0,i.kt)("a",{href:"https://victorops.com/blog/ten-practices-of-highly-effective-devops-incident-management-teams"},(0,i.kt)(d,{color:"#203666",mdxType:"Highlight"},"here")),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"1.")," The initial step of the incident lifecycle is knowing about the problem."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"2.")," The second step helps you establish the severity and priority of the problem.",(0,i.kt)("br",{parentName:"p"}),"\n","We can split it into three points:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"- Triage (What's going on?)\n- Investigation (How bad is it?)\n- Identification (How long has it been occuring?)\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"3."),' The third step helps you to understand more regarding leading factors of incidents during remediation.\nFor example, a small "fix" can have implications elsewhere in your system and you must be aware of this.'),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"4.")," The fourth step will allow you to make a complete analysis about the incident:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"- How do we know about the problem faster?\n- How do we recover from the problem faster?\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"5.")," The fifth step will provides great metrics to review for further improvements.",(0,i.kt)("br",{parentName:"p"}),"\n","It will allow your team to improve the way they respond to incidents."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"- What you can learn from those mistakes?\n")),(0,i.kt)("p",null,"Here is the list of some terms with their definition that you can find in this article:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Rotation"),": A rotation is a recurring schedule, consisting of one or multiple work shifts, with team members alternating through a work shift.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Incident escalation"),": this is what happens when a person can't resolve an incident themselves and needs to report the incident to someone else (team, person, etc)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Escalation policy"),": this answers the question of how your organization handles these incidents.",(0,i.kt)("br",{parentName:"p"}),"\n","It defines who should be notified when an incident is triggered, and who the incident should escalate to if the first responder isn\u2019t available.",(0,i.kt)("br",{parentName:"p"}),"\n","Once one person has responded, the escalation policy will stop escalation, and no further notifications will be sent."))),(0,i.kt)("div",{className:"image-wrapper"},(0,i.kt)(r.ImageWrapper,{alt:"Splunk On-Call Escalation policy creation",width:"650",src:(0,l.Z)("img/backstage-splunk-on-call/escalation-policies.png"),mdxType:"ImageWrapper"}),(0,i.kt)("br",null),(0,i.kt)("em",null,"Splunk On-Call Escalation policy creation")),(0,i.kt)("h3",{id:"current-behavior"},"Current behavior"),(0,i.kt)("p",null,"For the moment only one incident management plugin exists, PagerDuty.",(0,i.kt)("br",{parentName:"p"}),"\n","Some people use Splunk On-Call VictorOps as their on-duty rotation manager and would like it to be integrated into backstage."),(0,i.kt)("p",null,"The goal of the issue is to implement a new plugin for ",(0,i.kt)("strong",{parentName:"p"},"Splunk On-Call"),"."),(0,i.kt)("p",null,"This plugin should provides:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("strong",{parentName:"li"},"list of incidents")),(0,i.kt)("li",{parentName:"ul"},"A way to ",(0,i.kt)("strong",{parentName:"li"},"trigger a new incident")," to specific users and/or teams"),(0,i.kt)("li",{parentName:"ul"},"A way to ",(0,i.kt)("strong",{parentName:"li"},"acknowledge/resolve an incident")),(0,i.kt)("li",{parentName:"ul"},"Information details about the ",(0,i.kt)("strong",{parentName:"li"},"persons on-call"))),(0,i.kt)("admonition",{title:"Issue link",type:"note"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/backstage/backstage/issues/3790"},"https://github.com/backstage/backstage/issues/3790"))),(0,i.kt)("h2",{id:"implement-the-solution"},"Implement the solution"),(0,i.kt)("admonition",{title:"code blocks",type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"The code blocks are intentionally incomplete for the sake of readability.",(0,i.kt)("br",{parentName:"p"}),"\n","If you want to read the full code you'll find it in the PR link at the top.")),(0,i.kt)("admonition",{title:"changes",type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"This PR being still Open, some parts are likely to change.",(0,i.kt)("br",{parentName:"p"}),"\n","I will keep the article updated if any changes are made.")),(0,i.kt)("h3",{id:"create-the-plugin"},"Create the plugin"),(0,i.kt)("p",null,"To create a new plugin, the Backstage CLI already has a command that we can use:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn create-plugin splunk-on-call\n")),(0,i.kt)("p",null,"This will setup a new Backstage plugin with the ID we provided."),(0,i.kt)("div",{className:"image-wrapper"},(0,i.kt)(r.ImageWrapper,{alt:"Splunk On-Call",width:"100%",src:(0,l.Z)("img/backstage-splunk-on-call/plugin-creation.png"),mdxType:"ImageWrapper"})),(0,i.kt)("p",null,"We have now a working example plugin on which we will base to add our ",(0,i.kt)("strong",{parentName:"p"},"different functionalities"),"."),(0,i.kt)("p",null,"Our plugin will be created with the ",(0,i.kt)("inlineCode",{parentName:"p"},"createPlugin")," method which will create a new plugin instance:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="plugins/splunk-on-call/src/plugin.ts"',title:'"plugins/splunk-on-call/src/plugin.ts"'},'export const plugin = createPlugin({\n  id: "splunk-on-call",\n  apis: [\n    createApiFactory({\n      api: splunkOnCallApiRef,\n      deps: { discoveryApi: discoveryApiRef, configApi: configApiRef },\n      factory: ({ configApi, discoveryApi }) =>\n        SplunkOnCallClient.fromConfig(configApi, discoveryApi),\n    }),\n  ],\n});\n')),(0,i.kt)("h4",{id:"folder-structure"},"Folder structure"),(0,i.kt)("p",null,"The plugin looks like a separate package, it has a ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json")," and a ",(0,i.kt)("inlineCode",{parentName:"p"},"src")," folder.\nIt allows us to have a better independence of the different plugins, to deploy them separately and to work on them in isolation from the rest of the application.  "),(0,i.kt)("p",null,"Note that the ",(0,i.kt)("inlineCode",{parentName:"p"},"index.ts")," files are there to let us import from the folder path and not specific files."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},".\n\u251c\u2500\u2500 README.md # Display information about the plugin\n\u251c\u2500\u2500 dev\n\u2502\xa0\xa0 \u2514\u2500\u2500 index.tsx\n\u251c\u2500\u2500 package.json\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 api # Plugin API\n    \u2502\xa0\xa0 \u251c\u2500\u2500 client.ts\n    \u2502\xa0\xa0 \u251c\u2500\u2500 index.ts\n    \u2502\xa0\xa0 \u251c\u2500\u2500 mocks.ts\n    \u2502\xa0\xa0 \u2514\u2500\u2500 types.ts\n    \u251c\u2500\u2500 assets\n    \u2502\xa0\xa0 \u2514\u2500\u2500 emptystate.svg\n    \u251c\u2500\u2500 components # Plugin components\n    \u2502\xa0\xa0 \u251c\u2500\u2500 Errors\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 MissingApiKeyOrApiIdError.tsx\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.ts\n    \u2502\xa0\xa0 \u251c\u2500\u2500 Escalation\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 Escalation.test.tsx\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 EscalationPolicy.tsx\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 EscalationUser.tsx\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 EscalationUsersEmptyState.tsx\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.ts\n    \u2502\xa0\xa0 \u251c\u2500\u2500 Incident\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 IncidentEmptyState.tsx\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 IncidentListItem.tsx\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 Incidents.test.tsx\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 Incidents.tsx\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.ts\n    \u2502\xa0\xa0 \u251c\u2500\u2500 SplunkOnCallCard.test.tsx\n    \u2502\xa0\xa0 \u251c\u2500\u2500 SplunkOnCallCard.tsx\n    \u2502\xa0\xa0 \u251c\u2500\u2500 TriggerDialog\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 TriggerDialog.test.tsx\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 TriggerDialog.tsx\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.ts\n    \u2502\xa0\xa0 \u2514\u2500\u2500 types.ts\n    \u251c\u2500\u2500 index.ts # Plugin entry point\n    \u251c\u2500\u2500 plugin.test.ts\n    \u251c\u2500\u2500 plugin.ts # Plugin creation\n    \u2514\u2500\u2500 setupTests.ts\n")),(0,i.kt)("h3",{id:"create-the-plugin-marketplace-entry"},"Create the plugin Marketplace entry"),(0,i.kt)("p",null,"In order to allow people to use our plugin, we need to add it to the ",(0,i.kt)("a",{href:"https://backstage.io/plugins"},(0,i.kt)(d,{color:"#203666",mdxType:"Highlight"},"Backstage plugin marketplace")),"."),(0,i.kt)("p",null,"The marketplace is used to:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"List the available plugins with ",(0,i.kt)("strong",{parentName:"li"},"information")," (title, description, tag, etc)"),(0,i.kt)("li",{parentName:"ul"},"Show who that contributed it (",(0,i.kt)("strong",{parentName:"li"},"user-company"),")"),(0,i.kt)("li",{parentName:"ul"},"Link to appropriate ",(0,i.kt)("strong",{parentName:"li"},"documentation"))),(0,i.kt)("div",{className:"image-wrapper"},(0,i.kt)(r.ImageWrapper,{alt:"Backstage Marketplace",width:"100%",src:(0,l.Z)("img/backstage-splunk-on-call/marketplace.png"),mdxType:"ImageWrapper"}),(0,i.kt)("br",null),(0,i.kt)("em",null,"Backstage Marketplace")),(0,i.kt)("br",null),(0,i.kt)("p",null,"To add the plugin to the marketplace, we need to create a file in ",(0,i.kt)("inlineCode",{parentName:"p"},"microsite/data/plugins")," with our plugin's information."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="microsite/data/plugins/splunk-on-call.yaml"',title:'"microsite/data/plugins/splunk-on-call.yaml"'},'---\ntitle: Splunk On-Call\nauthor: Spotify\nauthorUrl: https://github.com/spotify\ncategory: Monitoring\ndescription: Splunk On-Call offers a simple way to identify incidents and escalation policies.\ndocumentation: https://github.com/backstage/backstage/tree/master/plugins/splunk-on-call\niconUrl: data:image/svg+xml;base64, # ...\nnpmPackageName: "@backstage/plugin-splunk-on-call"\ntags:\n  - monitoring\n  - errors\n  - alerting\n  - splunk\n')),(0,i.kt)("h3",{id:"create-the-plugin-api"},"Create the plugin API"),(0,i.kt)("p",null,"In order to connect our plugin to the Splun On-Call API, we will make our calls separately from the UI part."),(0,i.kt)("p",null,"Here is the list of all the routes we are going to implement."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Method name"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"getIncidents")),(0,i.kt)("td",{parentName:"tr",align:null},"Fetches a ",(0,i.kt)("strong",{parentName:"td"},"list of incidents"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"getOnCallUsers")),(0,i.kt)("td",{parentName:"tr",align:null},"Fetches the ",(0,i.kt)("strong",{parentName:"td"},"list of users in an escalation policy"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"triggerAlarm")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Triggers")," an incident to specific users and/or specific teams.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"resolveIncident")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Resolves")," an incident.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"acknowledgeIncident")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Acknowledge")," an incident.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"getUsers")),(0,i.kt)("td",{parentName:"tr",align:null},"Get a ",(0,i.kt)("strong",{parentName:"td"},"list of users")," for the user organization.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"getTeams")),(0,i.kt)("td",{parentName:"tr",align:null},"Get a ",(0,i.kt)("strong",{parentName:"td"},"list of teams")," for the user organization.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"getEscalationPolicies")),(0,i.kt)("td",{parentName:"tr",align:null},"Get a ",(0,i.kt)("strong",{parentName:"td"},"list of escalation policies")," for the user organization.")))),(0,i.kt)("h4",{id:"proxying"},"Proxying"),(0,i.kt)("p",null,"The proxy will allow us to redirect calls from ",(0,i.kt)("inlineCode",{parentName:"p"},"/splunk-on-call")," to the Splunk On-Call API ",(0,i.kt)("inlineCode",{parentName:"p"},"https://api.victorops.com/api-public")," and add authentication information in the headers."),(0,i.kt)("p",null,"By default, the proxy is already added to the default Backstage project:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="packages/backend/src/index.ts"',title:'"packages/backend/src/index.ts"'},'const proxyEnv = useHotMemoize(module, () => createEnv("proxy"));\n\nconst service = createServiceBuilder(module)\n  .loadConfig(configReader)\n  // ... other routers\n  .addRouter("/proxy", await proxy(proxyEnv));\n')),(0,i.kt)("p",null,"To add our proxy config, we will put our configuration under the ",(0,i.kt)("inlineCode",{parentName:"p"},"proxy")," key of the ",(0,i.kt)("inlineCode",{parentName:"p"},"app.config.yaml")," file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="app.config.yaml"',title:'"app.config.yaml"'},'proxy:\n  "/splunk-on-call": # The route context: determine which requests should be proxied to the target host\n    target: https://api.victorops.com/api-public # target host to proxy to\n    headers: # The different headers value to authenticate the requests\n      X-VO-Api-Id:\n        $env: SPLUNK_ON_CALL_API_ID\n      X-VO-Api-Key:\n        $env: SPLUNK_ON_CALL_API_KEY\n')),(0,i.kt)("h4",{id:"the-getincidents-example"},"The ",(0,i.kt)("inlineCode",{parentName:"h4"},"getIncidents")," example"),(0,i.kt)("p",null,"In order to understand how the API works, we will take the ",(0,i.kt)("inlineCode",{parentName:"p"},"getIncidents")," method example."),(0,i.kt)("p",null,"Note that the factory method ",(0,i.kt)("inlineCode",{parentName:"p"},"fromConfig")," takes in parameter ",(0,i.kt)("inlineCode",{parentName:"p"},"configApi")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"discoveryApi")," which allows us to retrieve some variables related to the app configuration.",(0,i.kt)("br",{parentName:"p"}),"\n","(e.g. the ",(0,i.kt)("inlineCode",{parentName:"p"},"this.config.discoveryApi.getBaseUrl('proxy')")," refers to the proxy base url)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="plugins/splunk-on-call/src/api/client.ts"',title:'"plugins/splunk-on-call/src/api/client.ts"'},'export class SplunkOnCallClient implements SplunkOnCallApi {\n  static fromConfig(configApi: ConfigApi, discoveryApi: DiscoveryApi) {\n    const usernameFromConfig: string | null =\n      configApi.getOptionalString("splunkoncall.username") || null;\n    return new SplunkOnCallClient({\n      username: usernameFromConfig,\n      discoveryApi,\n    });\n  }\n  constructor(private readonly config: ClientApiConfig) {}\n\n  async getIncidents(): Promise<Incident[]> {\n    // We retrieve the base url of the proxy\n    // on which we can get /splunk-on-call/<endpoint>\n    const url = `${await this.config.discoveryApi.getBaseUrl(\n      "proxy"\n    )}/splunk-on-call/v1/incidents`;\n\n    const { incidents } = await this.getByUrl<IncidentsResponse>(url);\n\n    return incidents;\n  }\n\n  // ... other methods\n\n  private async getByUrl<T>(url: string): Promise<T> {\n    const options = {\n      method: "GET",\n      headers: {\n        "Content-Type": "application/json",\n      },\n    };\n    const response = await this.request(url, options);\n\n    return response.json();\n  }\n\n  // This method is used to make the API calls\n  // It also handle the different response errors\n  private async request(\n    url: string,\n    options: RequestOptions\n  ): Promise<Response> {\n    const response = await fetch(url, options);\n    if (response.status === 403) {\n      throw new UnauthorizedError();\n    }\n    if (!response.ok) {\n      const payload = await response.json();\n      const errors = payload.errors.map((error: string) => error).join(" ");\n      const message = `Request failed with ${response.status}, ${errors}`;\n      throw new Error(message);\n    }\n    return response;\n  }\n}\n')),(0,i.kt)("h3",{id:"create-the-components"},"Create the components"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"components")," folder contains all of our components."),(0,i.kt)("h4",{id:"splunkoncallcard"},"SplunkOnCallCard"),(0,i.kt)("p",null,"This is the main root component, the one that includes the rest of the child components."),(0,i.kt)("div",{className:"image-wrapper"},(0,i.kt)(r.ImageWrapper,{alt:"Contribution presentation",width:"400",src:(0,l.Z)("img/backstage-splunk-on-call/incident-list-component.png"),mdxType:"ImageWrapper"}),(0,i.kt)("br",null),(0,i.kt)("em",null,"Splunk On-Call Card component")),(0,i.kt)("h4",{id:"incident-list"},"Incident list"),(0,i.kt)("p",null,"This component is used to display the list of the different incidents with their associated information (creator name, creation date, etc)."),(0,i.kt)("p",null,"An incident can have several ",(0,i.kt)("strong",{parentName:"p"},"status"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"triggered"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"acknowledge")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"resolved"),".",(0,i.kt)("br",{parentName:"p"}),"\n","It also have an ",(0,i.kt)("strong",{parentName:"p"},"action section")," where the user can ",(0,i.kt)("inlineCode",{parentName:"p"},"acknowledge")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"resolve")," the incident."),(0,i.kt)("div",{className:"image-wrapper"},(0,i.kt)(r.ImageWrapper,{alt:"Contribution presentation",width:"400",src:(0,l.Z)("img/backstage-splunk-on-call/incident-list.png"),mdxType:"ImageWrapper"}),(0,i.kt)("br",null),(0,i.kt)("em",null,"Incident list component")),(0,i.kt)("br",null),(0,i.kt)("p",null,"Here is the code of the main ",(0,i.kt)("inlineCode",{parentName:"p"},"Incidents")," component:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="plugins/splunk-on-call/src/components/Incident/Incidents.tsx"',title:'"plugins/splunk-on-call/src/components/Incident/Incidents.tsx"'},'type Props = {\n  refreshIncidents: boolean;\n};\n\nexport const Incidents = ({ refreshIncidents }: Props) => {\n  const api = useApi(splunkOnCallApiRef);\n\n  // Fetch the incident list\n  const [{ value: incidents, loading, error }, getIncidents] = useAsyncFn(\n    async () => {\n      const incidents = await api.getIncidents();\n      return incidents;\n    }\n  );\n\n  // Trigger the refresh\n  useEffect(() => {\n    getIncidents();\n  }, [refreshIncidents, getIncidents]);\n\n  // Display the alert if an error occured\n  if (error) {\n    return (\n      <Alert severity="error">\n        Error encountered while fetching information. {error.message}\n      </Alert>\n    );\n  }\n\n  // Display the loading component while the request is in progress\n  if (loading) {\n    return <Progress />;\n  }\n\n  // Display the empty state component if we don\'t have any incident\n  if (!incidents?.length) {\n    return <IncidentsEmptyState />;\n  }\n\n  // Display the incident list\n  return (\n    <List dense subheader={<ListSubheader>INCIDENTS</ListSubheader>}>\n      {incidents!.map((incident, index) => (\n        <IncidentListItem\n          onIncidentAction={() => getIncidents()}\n          key={index}\n          incident={incident}\n        />\n      ))}\n    </List>\n  );\n};\n')),(0,i.kt)("h4",{id:"escalation"},"Escalation"),(0,i.kt)("div",{className:"image-wrapper"},(0,i.kt)(r.ImageWrapper,{alt:"Escalation",width:"400",src:(0,l.Z)("img/backstage-splunk-on-call/escalation.png"),mdxType:"ImageWrapper"}),(0,i.kt)("br",null),(0,i.kt)("em",null,"Escalation")),(0,i.kt)("br",null),(0,i.kt)("p",null,"This component is used to display the list of the ",(0,i.kt)("strong",{parentName:"p"},"persons on-call"),".",(0,i.kt)("br",{parentName:"p"}),"\n","The logic of the component is globally the same as for the incident list."),(0,i.kt)("p",null,"We will see here how to retrieve and transform the list of users returned by the ",(0,i.kt)("inlineCode",{parentName:"p"},"GET /api-public/v1/oncall/current")," call."),(0,i.kt)("p",null,"Here is what the data returned by the Splunk On-Call API looks like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "teamsOnCall": [\n    {\n      "team": {\n        "name": "string",\n        "slug": "string"\n      },\n      "onCallNow": [\n        {\n          "escalationPolicy": {\n            "name": "string",\n            "slug": "string"\n          },\n          "users": [\n            {\n              "onCallUser": {\n                "username": "string"\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n')),(0,i.kt)("p",null,"As we have to return a list with the users, we will filter our ",(0,i.kt)("inlineCode",{parentName:"p"},"teamsOnCall")," to keep only those that match our current team and we will then retrieve the users within that team:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="plugins/splunk-on-call/src/components/Escalation/EscalationPolicy.tsx"',title:'"plugins/splunk-on-call/src/components/Escalation/EscalationPolicy.tsx"'},"const { value: userNames, loading, error } = useAsync(async () => {\n  const oncalls = await api.getOnCallUsers();\n  const teamUsernames = oncalls\n    .filter((oncall) => oncall.team?.name === team)\n    .flatMap((oncall) =>\n      oncall.oncallNow?.flatMap((oncallNow) =>\n        oncallNow.users?.flatMap((user) => user?.onCalluser?.username)\n      )\n    );\n  return teamUsernames;\n});\n")),(0,i.kt)("h4",{id:"trigger-dialog"},"Trigger Dialog"),(0,i.kt)("p",null,"This component is used to trigger a new incident to specific users and/or teams."),(0,i.kt)("div",{className:"image-wrapper"},(0,i.kt)(r.ImageWrapper,{alt:"Trigger Dialog",width:"80%",src:(0,l.Z)("img/backstage-splunk-on-call/trigger-dialog.jpg"),mdxType:"ImageWrapper"}),(0,i.kt)("br",null),(0,i.kt)("em",null,"Trigger Dialog")),(0,i.kt)("h4",{id:"errors"},"Errors"),(0,i.kt)("p",null,"This component is used to display various errors to the end user."),(0,i.kt)("p",null,"An error can appear if:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"the Splunk On-Call ",(0,i.kt)("strong",{parentName:"li"},"API_KEY")," and/or ",(0,i.kt)("strong",{parentName:"li"},"API_ID")," are not provided"),(0,i.kt)("li",{parentName:"ul"},"the Splunk On-Call ",(0,i.kt)("strong",{parentName:"li"},"username")," is not provided or invalid"),(0,i.kt)("li",{parentName:"ul"},"the Splunk On-Call ",(0,i.kt)("strong",{parentName:"li"},"team")," is not provided")),(0,i.kt)("div",{className:"image-wrapper"},(0,i.kt)(r.ImageWrapper,{alt:"Plugin errors",width:"80%",src:(0,l.Z)("img/backstage-splunk-on-call/errors.png"),mdxType:"ImageWrapper"}),(0,i.kt)("br",null),(0,i.kt)("em",null,"Trigger Dialog")),(0,i.kt)("h3",{id:"add-the-tests"},"Add the tests"),(0,i.kt)("p",null,"Let's take the example of the ",(0,i.kt)("inlineCode",{parentName:"p"},"Incident")," component."),(0,i.kt)("p",null,"Before writing our tests, we need to set up the different mocked apis:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"alertApiRef"),": Core Utility API which is used to report alerts."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"splunkOnCallApiRef"),": Splunk On-Call plugin API")),(0,i.kt)("p",null,"We will pass these values to the ",(0,i.kt)("inlineCode",{parentName:"p"},"ApiProvider")," (an Higher Order Component) which will provide a React ",(0,i.kt)("inlineCode",{parentName:"p"},"Context.Provider")," with our apis."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="plugins/splunk-on-call/src/components/Incident/Incidents.test.tsx"',title:'"plugins/splunk-on-call/src/components/Incident/Incidents.test.tsx"'},'const mockSplunkOnCallApi = {\n  getIncidents: () => [],\n  getTeams: () => [],\n};\nconst apis = ApiRegistry.from([\n  [\n    alertApiRef,\n    createApiRef({\n      id: "core.alert",\n      description: "Used to report alerts and forward them to the app",\n    }),\n  ],\n  [splunkOnCallApiRef, mockSplunkOnCallApi],\n]);\n')),(0,i.kt)("p",null,"The tests use ",(0,i.kt)("a",{href:"https://github.com/testing-library/react-testing-library"},(0,i.kt)(d,{color:"#203666",mdxType:"Highlight"},"React Testing library"))," to help testing UI components in a user-centric way."),(0,i.kt)("h4",{id:"empty-incident-list"},"Empty incident list"),(0,i.kt)("p",null,"We test the case where the list of incidents is ",(0,i.kt)("strong",{parentName:"p"},"empty")," and we have to display the ",(0,i.kt)("inlineCode",{parentName:"p"},"IncidentsEmptyState")," component."),(0,i.kt)("div",{className:"image-wrapper"},(0,i.kt)(r.ImageWrapper,{alt:"Contribution presentation",width:"400",src:(0,l.Z)("img/backstage-splunk-on-call/no-incident.png"),mdxType:"ImageWrapper"}),(0,i.kt)("br",null),(0,i.kt)("em",null,"Empty incident list")),(0,i.kt)("br",null),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="plugins/splunk-on-call/src/components/Incident/Incidents.test.tsx"',title:'"plugins/splunk-on-call/src/components/Incident/Incidents.test.tsx"'},'it("Renders an empty state when there are no incidents", async () => {\n  mockSplunkOnCallApi.getTeams = jest\n    .fn()\n    .mockImplementationOnce(async () => [MOCK_TEAM]);\n\n  const { getByText, queryByTestId } = render(\n    wrapInTestApp(\n      <ApiProvider apis={apis}>\n        <Incidents refreshIncidents={false} team="test" />\n      </ApiProvider>\n    )\n  );\n  await waitFor(() => !queryByTestId("progress"));\n  expect(getByText("Nice! No incidents found!")).toBeInTheDocument();\n});\n')),(0,i.kt)("h4",{id:"valid-incident-list"},"Valid incident list"),(0,i.kt)("p",null,"We test the case where we have an incident list and the incidents are correctly displayed."),(0,i.kt)("div",{className:"image-wrapper"},(0,i.kt)(r.ImageWrapper,{alt:"Contribution presentation",width:"400",src:(0,l.Z)("img/backstage-splunk-on-call/incident-list-valid.png"),mdxType:"ImageWrapper"}),(0,i.kt)("br",null),(0,i.kt)("em",null,"Valid incident list")),(0,i.kt)("br",null),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="plugins/splunk-on-call/src/components/Incident/Incidents.test.tsx"',title:'"plugins/splunk-on-call/src/components/Incident/Incidents.test.tsx"'},'it("Renders all incidents", async () => {\n  mockSplunkOnCallApi.getIncidents = jest\n    .fn()\n    .mockImplementationOnce(async () => [MOCK_INCIDENT]);\n  mockSplunkOnCallApi.getTeams = jest\n    .fn()\n    .mockImplementationOnce(async () => [MOCK_TEAM]);\n  const {\n    getByText,\n    getByTitle,\n    getAllByTitle,\n    getByLabelText,\n    queryByTestId,\n  } = render(\n    wrapInTestApp(\n      <ApiProvider apis={apis}>\n        <Incidents team="test" refreshIncidents={false} />\n      </ApiProvider>\n    )\n  );\n  await waitFor(() => !queryByTestId("progress"));\n  // Retrieve incident creator name\n  expect(\n    getByText("user", {\n      exact: false,\n    })\n  ).toBeInTheDocument();\n  // Retrieve incident name\n  expect(getByText("test-incident")).toBeInTheDocument();\n  // Retrieve incident phase\n  expect(getByTitle("Acknowledged")).toBeInTheDocument();\n  // Retrieve incident phase span\n  expect(getByLabelText("Status warning")).toBeInTheDocument();\n  // Retrieve incident link\n  expect(getAllByTitle("View in Splunk On-Call").length).toEqual(1);\n});\n')),(0,i.kt)("h4",{id:"incidents-fetching-error"},"Incidents fetching error"),(0,i.kt)("p",null,"We test the case where we have an error while fetching the ",(0,i.kt)("inlineCode",{parentName:"p"},"getIncidents")," route.",(0,i.kt)("br",{parentName:"p"}),"\n","This will trigger the alert API."),(0,i.kt)("div",{className:"image-wrapper"},(0,i.kt)(r.ImageWrapper,{alt:"Contribution presentation",width:"400",src:(0,l.Z)("img/backstage-splunk-on-call/error-occured.png"),mdxType:"ImageWrapper"}),(0,i.kt)("br",null),(0,i.kt)("em",null,"Incidents fetching error")),(0,i.kt)("br",null),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="plugins/splunk-on-call/src/components/Incident/Incidents.test.tsx"',title:'"plugins/splunk-on-call/src/components/Incident/Incidents.test.tsx"'},'it("Handle errors", async () => {\n  // Mock the getIncidents call to throw an error\n  mockSplunkOnCallApi.getIncidents = jest\n    .fn()\n    .mockRejectedValueOnce(new Error("Error occurred"));\n\n  const { getByText, queryByTestId } = render(\n    wrapInTestApp(\n      <ApiProvider apis={apis}>\n        <Incidents team="test" refreshIncidents={false} />\n      </ApiProvider>\n    )\n  );\n  await waitFor(() => !queryByTestId("progress"));\n  expect(\n    getByText("Error encountered while fetching information. Error occurred")\n  ).toBeInTheDocument();\n});\n')),(0,i.kt)("h3",{id:"add-changesets"},"Add changesets"),(0,i.kt)("p",null,"The final step is to add a ",(0,i.kt)("strong",{parentName:"p"},"changeset")," which will contains the list of our file changes.",(0,i.kt)("br",{parentName:"p"}),"\n","It lets us declare ",(0,i.kt)("strong",{parentName:"p"},"how our changes should be released"),".",(0,i.kt)("br",{parentName:"p"}),"\n","In our case we only have ",(0,i.kt)("inlineCode",{parentName:"p"},"patch")," changes."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:'title=".changeset/itchy-camels-grin.md"',title:'".changeset/itchy-camels-grin.md"'},"---\n'@backstage/plugin-splunk-on-call': patch\n---\n\nAdded splunk-on-call plugin.\n")),(0,i.kt)("h2",{id:"final-result"},"Final result"),(0,i.kt)("p",null,"Here is the final result with a sample workflow:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Creation of a new incident")," to the current team"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Acknowledgement")," of the incident"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Resolution")," of the incident"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Incident display")," on the Splunk On-Call dashboard")),(0,i.kt)("div",null,(0,i.kt)("video",{width:"100%",muted:!0,controls:!0},(0,i.kt)("source",{src:(0,l.Z)("img/backstage-splunk-on-call/plugin-splunk-on-call.mp4"),type:"video/mp4"}))),(0,i.kt)("h2",{id:"takeaway"},"Takeaway"),(0,i.kt)("h3",{id:"problems-encountered"},"Problems encountered"),(0,i.kt)("p",null,"I found that there were some inconsistencies in the ",(0,i.kt)("a",{parentName:"p",href:"https://portal.victorops.com/api-docs/"},"Splunk On-Call API documentation"),", especially in the ",(0,i.kt)("strong",{parentName:"p"},"models"),".",(0,i.kt)("br",{parentName:"p"}),"\n","Therefore I had to go back several times on my TypeScript models to fix them."),(0,i.kt)("h3",{id:"what-did-i-learn-"},"What did I learn ?"),(0,i.kt)("p",null,"This contribution has allowed me to use an ",(0,i.kt)("strong",{parentName:"p"},"Incident management tool")," (Splunk On-Call) and to familiarize myself with the ",(0,i.kt)("strong",{parentName:"p"},"creation of plugins for Backstage"),".",(0,i.kt)("br",{parentName:"p"}),"\n","It allowed me to interact with parts of Backstage that I had never contributed to before."))}k.isMDXComponent=!0},6395:function(e,t,n){n.r(t),n.d(t,{ImageWrapper:function(){return m},Merged:function(){return u},Open:function(){return k},Status:function(){return g},assets:function(){return c},contentTitle:function(){return o},default:function(){return f},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return d}});var a=n(3117),i=n(7294),l=n(3905),r=n(2879);const s={},o=void 0,p={unversionedId:"utils",id:"utils",title:"utils",description:"",source:"@site/docs/utils.md",sourceDirName:".",slug:"/utils",permalink:"/docs/utils",draft:!1,editUrl:"https://github.com/ayshiff/my-open-source-journey/docs/utils.md",tags:[],version:"current",frontMatter:{}},c={},d=[],u=e=>{let{date:t}=e;return(0,l.kt)("div",null,(0,l.kt)("div",{className:"merged"},(0,l.kt)("span",null,(0,l.kt)("svg",{height:"16",viewBox:"0 0 16 16",version:"1.1",width:"16",fill:"white","aria-hidden":"true",className:"status_svg"},(0,l.kt)("path",{fillRule:"evenodd",d:"M5 3.254V3.25v.005a.75.75 0 110-.005v.004zm.45 1.9a2.25 2.25 0 10-1.95.218v5.256a2.25 2.25 0 101.5 0V7.123A5.735 5.735 0 009.25 9h1.378a2.251 2.251 0 100-1.5H9.25a4.25 4.25 0 01-3.8-2.346zM12.75 9a.75.75 0 100-1.5.75.75 0 000 1.5zm-8.5 4.5a.75.75 0 100-1.5.75.75 0 000 1.5z"})),"Merged")),t||null)},m=e=>{let{src:t,alt:n,width:a}=e;const[s,o]=i.useState(!1);return(0,l.kt)("div",null,(0,l.kt)("div",{className:"image-zoom",onClick:()=>o(!0)},(0,l.kt)("img",{src:t,alt:n,width:a})),s&&(0,l.kt)(r.Z,{mainSrc:t,onCloseRequest:()=>o(!1),mdxType:"Lightbox"}))},k=e=>{let{date:t}=e;return(0,l.kt)("div",null,(0,l.kt)("div",{className:"open"},(0,l.kt)("span",null,(0,l.kt)("svg",{height:"16",viewBox:"0 0 16 16",version:"1.1",width:"16",fill:"white","aria-hidden":"true",className:"status_svg"},(0,l.kt)("path",{fillRule:"evenodd",d:"M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z"})),"Open")),t||null)},g=e=>{let{url:t}=e;const[n,a]=i.useState(null);return i.useEffect((()=>{let e=!0;return fetch(t).then((e=>e.json())).then((t=>{e&&a(t.merged)})),()=>{e=!1}}),[]),null===n?(0,l.kt)("div",null):!0===n?(0,l.kt)(u,{mdxType:"Merged"}):(0,l.kt)(k,{mdxType:"Open"})},h={toc:d,Merged:u,ImageWrapper:m,Open:k,Status:g};function f(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}))}f.isMDXComponent=!0}}]);